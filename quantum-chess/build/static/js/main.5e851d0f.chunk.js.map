{"version":3,"sources":["components/Tile/Tile.tsx","constants.ts","referee/pawnLogic.ts","referee/boardChecks.ts","referee/pieceLogic.ts","referee/Referee.ts","components/chessboard/chessboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Tile","number","image","className","style","backgroundImage","TeamType","PieceType","HORIZONTAL_AXIS","VERTICAL_AXIS","GRID_SIZE","initialBoardState","p","type","team","BLACK","WHITE","y","push","x","ROOK","enPassantable","canCastle","NIGHT","BISHOP","QUEEN","KING","i","length","PAWN","pawnIsBlockaded","boardState","find","isFriendlyPiece","piece","isPawnNormalMove","px","py","enemyTeam","increment","Checker","myKing","dx","dy","isLegalNightMove","isLegalBishopMove","isLegalRookMove","isLegalQueenMove","isLegalKingMove","y_dir","Math","sign","abs","x_dir","Referee","taken","valid","this","noCastle","takePiece","forEach","unsetEnPassant","value","activePlayer","startingRow","isPawnStartingMove","setEnPassant","endMove","checkEnPassant","isEnPassant","checker","king","rook","isMyKingInCheck","isCastleMove","teleported","Chessboard","useState","activePiece","setActivePiece","gridX","setGridX","gridY","setGridY","pieces","setPieces","setActivePlayer","chessboardRef","useRef","referee","revert","position","removeProperty","dropPiece","e","chessboard","current","floor","clientX","offsetLeft","ceil","clientY","offsetTop","currentPiece","oldBoardState","deepCopy","isValidMove","takenPiece","id2","indexOf","splice","teleportedPiece","tele","teleportPiece","id1","nextPlayer","switchPlayer","board","j","undefined","ref","onMouseUp","onMouseMove","left","top","movePiece","onMouseDown","element","target","classList","contains","grabPiece","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e851d0f.chunk.js","sourcesContent":["import './tile.css'\n\ninterface Props {\n    number : number;\n    image? : string;\n}\n\n\nexport default function Tile({number, image}: Props){\n    if (number % 2 === 0){\n        return <div className = 'tile black-tile'>\n        {image && <div style = {{backgroundImage : `url(${image})`}} className = 'chess-piece'></div>}\n        </div>\n    } else{\n        return <div className = 'tile white-tile'> \n        {image && <div style = {{backgroundImage : `url(${image})`}} className = 'chess-piece'></div>}\n        </div>\n    }\n    \n}","export const HORIZONTAL_AXIS = ['a', 'b', 'c', 'd', 'e', 'f',   'g', 'h'];\nexport const VERTICAL_AXIS = [1,2,3,4,5,6,7,8];\nexport const GRID_SIZE = 100\n\nexport interface Piece {\n    image: string;\n    x : number; \n    y : number; \n    type : PieceType;\n    team : TeamType;\n    enPassantable? : boolean;\n    taken? : boolean;\n    teleported? : boolean;\n    canCastle? : boolean;\n}\n\nexport enum TeamType{\n    WHITE,\n    BLACK\n}\n\nexport enum PieceType {\n    PAWN,\n    BISHOP, \n    NIGHT, \n    ROOK,\n    QUEEN,\n    KING,\n}\n\nexport const initialBoardState : Piece[] = [];\n\nfor (let p = 0; p < 2; p ++){\n    const type = p === 0 ? 'b': 'w';\n    const team = p === 0 ? TeamType.BLACK : TeamType.WHITE;\n    const y = p === 0 ?  7 : 0;\n    // Rooks\n    initialBoardState.push({image : `assets/images/rook_${type}.png`, x : 0,  y, team, type : PieceType.ROOK, enPassantable : false, canCastle : true})\n    initialBoardState.push({image : `assets/images/rook_${type}.png`, x : 7,  y, team, type : PieceType.ROOK, enPassantable : false, canCastle : true})\n\n    // Nights\n    initialBoardState.push({image : `assets/images/night_${type}.png`, x : 1,  y, team, type : PieceType.NIGHT, enPassantable : false})\n    initialBoardState.push({image : `assets/images/night_${type}.png`, x : 6,  y, team, type : PieceType.NIGHT, enPassantable : false})\n\n    // Bishops\n    initialBoardState.push({image : `assets/images/bishop_${type}.png`, x : 2,  y, team, type : PieceType.BISHOP, enPassantable : false})\n    initialBoardState.push({image : `assets/images/bishop_${type}.png`, x : 5,  y, team, type : PieceType.BISHOP, enPassantable : false})\n\n    // Queens\n    initialBoardState.push({image : `assets/images/queen_${type}.png`, x : 3,  y, team, type : PieceType.QUEEN, enPassantable : false})\n    // Kings\n    initialBoardState.push({image : `assets/images/king_${type}.png`, x : 4,  y, team, type : PieceType.KING, enPassantable : false, canCastle : true})\n\n}\n\n// Pawns\nfor (let i = 0; i < HORIZONTAL_AXIS.length; i++){\n    initialBoardState.push({image : 'assets/images/pawn_b.png', x : i, y : 6, team : TeamType.BLACK, type : PieceType.PAWN, enPassantable : false})\n}\nfor (let i = 0; i < HORIZONTAL_AXIS.length; i++){\n    initialBoardState.push({image : 'assets/images/pawn_w.png', x : i, y : 1, team : TeamType.WHITE, type : PieceType.PAWN, enPassantable : false})\n}","import { Piece, TeamType } from '../constants'\n\nfunction pawnIsBlockaded(x : number, y: number, boardState : Piece []): boolean {\n    const piece = boardState.find(p => p.x === x && p.y === y) \n    const occupied =  piece ? true : false\n    return occupied\n}\n\nfunction checkEnPassant (x : number, y : number, boardState : Piece []) : boolean {\n    const piece = boardState.find(p => p.x === x && p.y === y)\n    if (piece && piece.enPassantable){\n        return piece.enPassantable  \n    } return false\n}\n\n\n\n\nexport function setEnPassant(px : number, py : number, boardState : Piece []){\n        boardState.forEach(p => {\n            if (p.x === px && p.y === py){\n                p.enPassantable = true\n            } else{\n                p.enPassantable = false\n            }\n        })\n    }\n\nexport function unsetEnPassant( boardState : Piece []){\n    boardState.forEach(p => {\n            p.enPassantable = false\n    })\n}\n\nexport function isFriendlyPiece(x : number, y: number, team : TeamType, boardState : Piece []): boolean {\n    const piece = boardState.find(p => p.x === x && p.y === y)\n    const occupied =  piece && piece.team === team ? true : false\n    return occupied\n}\n\nexport function isPawnStartingMove(px : number, py : number, x : number, y : number, \n                                    team : TeamType, boardState : Piece []):boolean{\n    const startingRow = team === TeamType.WHITE ? 1 : 6\n    const increment = team === TeamType.WHITE ? 1 : - 1\n    if ((py === startingRow && px === x) && (py === y - 2 * increment)){\n        if (!pawnIsBlockaded(x, y, boardState) && !pawnIsBlockaded(x, y - increment, boardState)){\n            return true\n        }\n    } return false\n}\n\nexport function isPawnNormalMove(px : number, py : number, x : number, y : number, \n                                team : TeamType, boardState : Piece []): boolean{\n    const enemyTeam = team === TeamType.WHITE ? TeamType.BLACK : TeamType.WHITE\n    const increment = team === TeamType.WHITE ? 1 : - 1\n    if (py === y - increment && px === x){\n        if (!pawnIsBlockaded(x, y, boardState)){\n            return true;\n        } \n    }\n    if ((x === px + 1 || x === px -1) && (py === y - increment) && isFriendlyPiece(x, y, enemyTeam, boardState)) {\n        return true\n    } \n    return false \n} \n\n\nexport function isEnPassant(px : number, py : number, x : number, y : number,\n                                 team : TeamType, boardState : Piece []): boolean{\n    const enemyTeam = team === TeamType.WHITE ? TeamType.BLACK : TeamType.WHITE\n    const increment = team === TeamType.WHITE ? 1 : - 1\n    if ((x === px + 1 || x === px -1) && (py === y - increment) && isFriendlyPiece(x, py, enemyTeam, boardState)) {\n        if (checkEnPassant(x, py, boardState)){\n            return true\n        }\n    }\n    return false\n}","import { PieceType, TeamType, Piece } from \"../constants\"\nimport { isLegalBishopMove, isLegalRookMove, isLegalQueenMove, isLegalKingMove, isLegalNightMove} from \"./pieceLogic\"\nimport { isPawnNormalMove } from \"./pawnLogic\"\n\nexport default class Checker{\n    isMyKingInCheck(team : TeamType, boardState : Piece [], increment : number) : boolean {\n    const enemyTeam = team === TeamType.WHITE ? TeamType.BLACK : TeamType.WHITE\n    const myKing = boardState.find(p => p.team === team && p.type === PieceType.KING) \n    for (let i = 0; i < boardState.length; i++){\n        const p = boardState[i];\n        if (myKing && p.team === enemyTeam) {\n            const dx = myKing.x + increment - p.x\n            const dy = myKing.y - p.y\n            switch (p.type){\n                case PieceType.PAWN : {\n                    if (isPawnNormalMove(p.x, p.y, myKing.x + increment, myKing.y, p.team, boardState)){\n                        return true;\n                    } break;\n                }\n                case PieceType.NIGHT : {\n                    if (isLegalNightMove(p.x, p.y, dx, dy, boardState)){\n                        return true;\n                    } break;\n                }\n                case PieceType.BISHOP : {\n                    if (isLegalBishopMove(p.x, p.y, dx, dy, boardState)){\n                        return true;\n                    } break;\n                }\n                case PieceType.ROOK : {\n                    if (isLegalRookMove(p.x, p.y, dx, dy, boardState)){\n                        return true;\n                    } break;\n                }\n                case PieceType.QUEEN : {\n                    if (isLegalQueenMove(p.x, p.y, dx, dy, boardState)){\n                        return true;\n                    } break;\n                }\n                case PieceType.KING : {\n                    if (isLegalKingMove(p.x, p.y, dx, dy, boardState)){\n                        return true;\n                    } break;\n                }\n            }\n\n        }\n    }\n    return false\n}\n}","import { Piece , PieceType, TeamType} from '../constants'\nimport Checker from './boardChecks'\n\nexport function isLegalRookMove(px : number, py : number, dx : number, dy : number, boardState : Piece[]) : boolean {\n    if (dx === 0 || dy === 0){\n        if (dx === 0){\n            const y_dir = Math.sign(dy)\n            for (let i = 1; i < Math.abs(dy); i ++){\n                const obstructingPiece = boardState.find(p => p.x === px && p.y === py + i*y_dir) \n                if (obstructingPiece){\n                    return false\n                }\n            } \n            return true\n        }\n        if (dy === 0){\n            const x_dir = Math.sign(dx)\n            for (let i = 1; i < Math.abs(dx); i ++){\n                const obstructingPiece = boardState.find(p => p.x === px + i*x_dir && p.y === py) \n                if (obstructingPiece){\n                    return false\n                }\n            } \n            return true\n        }\n    } \n    return false;\n}\n\nexport function isLegalBishopMove(px : number, py : number, dx : number, dy : number, boardState : Piece[]) : boolean{\n    if (Math.abs(dx) === Math.abs(dy)){\n        const x_dir = Math.sign(dx)\n        const y_dir = Math.sign(dy)\n        for (let i = 1; i < Math.abs(dx); i ++){\n            const obstructingPiece = boardState.find(p => p.x === px + i*x_dir && p.y === py + i*y_dir) \n            if (obstructingPiece){\n                return false\n            }\n        } \n        return true\n    } \n    return false\n}\nexport function isLegalNightMove(px : number, py : number, dx : number, dy : number, boardState : Piece[]) : boolean{\n    if ((Math.abs(dx) === 1 && Math.abs(dy) === 2) || (Math.abs(dx) === 2 && Math.abs(dy) === 1)){\n        return true\n    }\n    return false\n}\nexport function isLegalQueenMove(px : number, py : number, dx : number, dy : number, boardState : Piece[]) : boolean{\n    const legality = isLegalRookMove(px, py, dx, dy, boardState) || isLegalBishopMove(px, py, dx, dy, boardState)\n    return legality\n}\n\n\nexport function isLegalKingMove(px : number, py : number, dx : number, dy : number, boardState : Piece[]) : boolean{\n    if (Math.abs(dx) < 2 && Math.abs(dy) < 2){\n        return true\n    } \n    return false\n}\n\nexport function isCastleMove(px : number, py : number, dx : number, dy : number, team : TeamType,\n                            boardState : Piece[]) : boolean{\n    const checker = new Checker();\n    const king = boardState.find(p => p.type === PieceType.KING && p.team === team)\n    if (team === TeamType.WHITE){\n        if (king?.canCastle === true && dx === - 2){\n            const rook = boardState.find(p => p.x === 0 && p.y === 0)\n            if (rook?.canCastle){\n                if (!checker.isMyKingInCheck(team, boardState, 0) && \n                    !checker.isMyKingInCheck(team, boardState, -1) &&\n                    !checker.isMyKingInCheck(team, boardState, -2)){\n                        if (isLegalRookMove(king.x, king.y, -4, 0, boardState)){\n                            return true\n                        }\n                }\n            }\n        } \n        if (king?.canCastle === true && dx === 2){\n            const rook = boardState.find(p => p.x === 7 && p.y === 0)\n            if (rook?.canCastle){\n                if (!checker.isMyKingInCheck(team, boardState, 0) && \n                    !checker.isMyKingInCheck(team, boardState, 1) &&\n                    !checker.isMyKingInCheck(team, boardState, 2)){\n                        if (isLegalRookMove(king.x, king.y, 3, 0, boardState)){\n                            return true\n                        }\n                }\n            }\n        } \n    }\n    if (team === TeamType.BLACK){\n        if (king?.canCastle === true && dx === - 2){\n            const rook = boardState.find(p => p.x === 0 && p.y === 7)\n            if (rook?.canCastle){\n                if (!checker.isMyKingInCheck(team, boardState, 0) && \n                    !checker.isMyKingInCheck(team, boardState, -1) &&\n                    !checker.isMyKingInCheck(team, boardState, -2)){\n                        if (isLegalRookMove(king.x, king.y, -4, 0, boardState)){\n                            return true\n                        }\n                }\n            }\n        } \n        if (king?.canCastle === true && dx === 2){\n            const rook = boardState.find(p => p.x === 7 && p.y === 7)\n            if (rook?.canCastle){\n                if (!checker.isMyKingInCheck(team, boardState, 0) && \n                    !checker.isMyKingInCheck(team, boardState, 1) &&\n                    !checker.isMyKingInCheck(team, boardState, 2)){\n                        if (isLegalRookMove(king.x, king.y, 3, 0, boardState)){\n                            return true\n                        }\n                    return true\n                }\n            }\n        } \n    }\n    return false\n}","\nimport { PieceType, TeamType, Piece, } from \"../constants\"\nimport { isPawnNormalMove, isEnPassant, isPawnStartingMove, isFriendlyPiece, unsetEnPassant, setEnPassant } from \"./pawnLogic\"\nimport { isLegalBishopMove, isLegalRookMove, isLegalQueenMove, isLegalKingMove, isLegalNightMove, isCastleMove} from \"./pieceLogic\"\n\nexport default class Referee{\n    noCastle(px: number, py: number, boardState : Piece []){\n        const piece = boardState.find(p => p.x === px && p.y === py)\n        if (piece){\n            piece.canCastle = false\n        }\n    }\n    takePiece(x : number, y: number, team : TeamType, boardState : Piece []){\n        const piece = boardState.find(p => p.x === x && p.y === y && p.team !== team)  \n                if (piece) {\n            piece.taken = true\n        }\n    }\n    endMove(px : number, py : number, x : number, y: number, team : TeamType, boardState : Piece [], \n            valid : any){\n        if (!isFriendlyPiece(x, y, team, boardState)){\n            this.noCastle(px, py, boardState)\n            this.takePiece(x, y, team, boardState)\n            unsetEnPassant(boardState)\n            valid.value = true          \n        }\n    }\n    isValidMove(px : number, py : number, x : number, y : number, type : PieceType, \n                team : TeamType, boardState : Piece [], activePlayer : TeamType) : boolean{\n        // Only the active player can move\n        if (team !== activePlayer){\n            return false\n        }\n        // A non-move is not a move\n        if (px === x && py === y){\n            return false\n        }\n        // A move off the board is not a move\n        if (x < 0 || y < 0 || x > 7 || y > 7){\n            return false\n        }\n        var valid = { value: false }\n        const dx = x - px\n        const dy = y - py\n\n        switch(type){\n            case PieceType.PAWN : {\n                if (isPawnStartingMove(px, py, x, y, team, boardState)){\n                    setEnPassant(px, py, boardState)\n                    return true\n                }\n                if (isPawnNormalMove(px, py, x, y, team, boardState)){\n                    this.endMove(px, py, x, y, team, boardState, valid)\n                }\n                if (isEnPassant(px, py, x, y, team, boardState)){\n                    this.endMove(-1, -1, x, py, team, boardState, valid)\n                }\n                break;\n            }\n            case PieceType.NIGHT : {\n                if (isLegalNightMove(px, py, dx, dy, boardState)){\n                    this.endMove(px, py, x, y, team, boardState, valid)\n                }\n                break;\n            }\n            case PieceType.BISHOP : {\n                if (isLegalBishopMove(px, py, dx, dy, boardState)){\n                    this.endMove(px, py, x, y, team, boardState, valid)\n                }\n                break;\n            }\n            case PieceType.ROOK : {\n                if (isLegalRookMove(px, py, dx, dy, boardState)){\n                    this.endMove(px, py, x, y, team, boardState, valid)\n                }\n                break;\n            }\n            case PieceType.QUEEN : {\n                if (isLegalQueenMove(px, py, dx, dy, boardState)){\n                    this.endMove(px, py, x, y, team, boardState, valid)\n                }\n                break;\n            }\n            case PieceType.KING : {\n                if (isLegalKingMove(px, py, dx, dy, boardState)){\n                    this.endMove(px, py, x, y, team, boardState, valid)\n                }\n                if (isCastleMove(px, py, dx, dy, activePlayer, boardState)){\n                    if (activePlayer === TeamType.WHITE){\n                        if (dx === -2){ \n                            const piece = boardState.find(p => p.x === 0 && p.y === 0)\n                            if (piece){\n                                piece.teleported = true\n                            }\n                        }\n                        if (dx === 2){ \n                            const piece = boardState.find(p => p.x === 7 && p.y === 0)\n                            if (piece){\n                                piece.teleported = true\n                            }\n                        }\n                    }\n                    if (activePlayer === TeamType.BLACK){\n                        if (dx === -2){ \n                            const piece = boardState.find(p => p.x === 0 && p.y === 7)\n                            if (piece){\n                                piece.teleported = true\n                            }\n                        }\n                        if (dx === 2){ \n                            const piece = boardState.find(p => p.x === 7 && p.y === 7)\n                            if (piece){\n                                piece.teleported = true\n                            }\n                        }\n                    }\n                this.endMove(px, py, x, y, team, boardState, valid)\n                }\n            break;\n            }\n        }\n    return valid.value\n    }\n}","import React, {useRef, useState } from 'react';\nimport Tile from '../Tile/Tile';\nimport './chessboard.css';\nimport Referee from '../../referee/Referee'\nimport {VERTICAL_AXIS, HORIZONTAL_AXIS, GRID_SIZE, Piece, TeamType, initialBoardState} from '../../constants'\nimport Checker from '../../referee/boardChecks'\n\nexport default function Chessboard(){\n    const [activePiece, setActivePiece] = useState<HTMLElement | null>(null) \n    const [gridX, setGridX] = useState(0);\n    const [gridY, setGridY] = useState(0);\n    const [pieces, setPieces]  = useState<Piece[]>(initialBoardState);\n    const [activePlayer, setActivePlayer] = useState<TeamType>(TeamType.WHITE);\n    const chessboardRef = useRef<HTMLDivElement>(null);\n    const referee = new Referee();\n    const checker = new Checker();\n\n\n    function switchPlayer(){\n        const nextPlayer = activePlayer === TeamType.WHITE ? TeamType.BLACK : TeamType.WHITE\n        setActivePlayer(nextPlayer) \n    }\n    function deepCopy() : Piece [] {\n        const oldBoardState : Piece[] = [];\n        pieces.forEach(p => oldBoardState.push({image : p.image, x : p.x,  y : p.y, team : p.team, type : p.type, enPassantable : p.enPassantable}))\n        return oldBoardState\n    }\n\n    function revert(){\n        if (activePiece){\n            activePiece.style.position = 'relative';\n            activePiece.style.removeProperty('left');\n            activePiece.style.removeProperty('top');\n        }\n    }\n\n    function takePiece(p : Piece){\n        const id2 = pieces.indexOf(p)\n        pieces.splice(id2, 1)\n    }\n    function teleportPiece(p : Piece){\n        let tele = 0;\n        if (p.x === 7){  \n            tele = -2\n        } else {\n            tele = 3\n        }\n        p.x = p.x + tele\n        p.teleported = false\n    }\n\n    function grabPiece(e: React.MouseEvent){\n        const chessboard = chessboardRef.current\n        const element = e.target as HTMLElement\n        if (element.classList.contains('chess-piece') && chessboard){\n            setGridX(Math.floor((e.clientX - chessboard.offsetLeft)/GRID_SIZE));\n            setGridY(Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 8 * GRID_SIZE)/GRID_SIZE)));\n            const x = e.clientX - GRID_SIZE/2;\n            const y = e.clientY - -GRID_SIZE/2;\n            element.style.position = 'absolute'; \n            element.style.left = `${x}px`;\n            element.style.top = `${y}px`;\n            setActivePiece(element)    \n        }\n    \n    }\n    \n    function movePiece(e: React.MouseEvent){\n        const chessboard = chessboardRef.current\n        if (activePiece && chessboard){\n            const x = e.clientX - GRID_SIZE/2;\n            const y = e.clientY - GRID_SIZE/2;\n            activePiece.style.position = 'absolute'; \n            activePiece.style.left = `${x}px`;\n            activePiece.style.top = `${y}px`;\n        }\n    }\n    \n    function dropPiece(e: React.MouseEvent){\n        const chessboard = chessboardRef.current;\n        if (activePiece && chessboard){\n            const x = Math.floor((e.clientX - chessboard.offsetLeft)/GRID_SIZE);\n            const y = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 8 * GRID_SIZE)/GRID_SIZE))\n            const currentPiece = pieces.find(p => p.x === gridX && p.y === gridY)\n            if (currentPiece){\n                const oldBoardState = deepCopy()\n                const validMove = referee.isValidMove(gridX, gridY, x, y, currentPiece.type, currentPiece.team, pieces, activePlayer);                \n                if (validMove){\n                    // leave this here in case I find a bug setPieces(pieces)\n                    const takenPiece = pieces.find(p => p.taken === true)\n                    if (takenPiece){\n                        takePiece(takenPiece)\n                    }\n                    const teleportedPiece = pieces.find(p => p.teleported === true)\n                    if (teleportedPiece){\n                        teleportPiece(teleportedPiece)\n                    }\n                    const id1 = pieces.indexOf(currentPiece)\n                    currentPiece.x = x\n                    currentPiece.y = y\n                    pieces[id1] = currentPiece\n                    if (checker.isMyKingInCheck(currentPiece.team, pieces, 0)){\n                        setPieces(oldBoardState)\n                        revert()\n                    } else {\n                        setPieces(pieces)\n                        switchPlayer()\n                    }\n                } else {\n                revert()\n                }\n            }\n        }\n        setActivePiece(null);\n    }\n\n\n    let board = [];\n    for (let j = VERTICAL_AXIS.length - 1; j >= 0; j-- ){\n        for (let i = 0; i < HORIZONTAL_AXIS.length; i++ ) {\n            const number = i + j;\n            const piece = pieces.find(p => p.x === i && p.y === j) \n            let image = piece ? piece.image : undefined\n            board.push(<Tile key = {`${i}, ${j}`} image = {image} number = {number}/>);\n        }\n    }\n    return <div \n    ref = {chessboardRef} \n    onMouseUp = {e => dropPiece(e)} \n    onMouseMove = {e => movePiece(e)} \n    onMouseDown = {e => grabPiece(e)} \n    id = 'chessboard'>{board}</div>;\n}","// TODO\n// Clean Up Code, Queening, Checkmate, Comment, Make Multiplayer, Fix screen Glitch\n\n\nimport './App.css';\nimport Chessboard from './components/chessboard/chessboard';\n\n\nfunction App() {\n  return (\n    <div id = 'App'>\n      <Chessboard></Chessboard>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
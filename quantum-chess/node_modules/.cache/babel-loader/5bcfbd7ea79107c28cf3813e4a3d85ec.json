{"ast":null,"code":"import _classCallCheck from\"/home/jaybird/Coding Projects/Chess4/chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jaybird/Coding Projects/Chess4/chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{PieceType,TeamType}from\"../constants\";import{isLegalBishopMove,isLegalRookMove,isLegalQueenMove,isLegalKingMove,isLegalNightMove}from\"./pieceLogic\";import{isPawnNormalMove}from\"./pawnLogic\";var Checker=/*#__PURE__*/function(){function Checker(){_classCallCheck(this,Checker);}_createClass(Checker,[{key:\"isMyKingInCheck\",value:function isMyKingInCheck(team,boardState,increment){var enemyTeam=team===TeamType.WHITE?TeamType.BLACK:TeamType.WHITE;var myKing=boardState.find(function(p){return p.team===team&&p.type===PieceType.KING;});for(var i=0;i<boardState.length;i++){var p=boardState[i];if(myKing&&p.team===enemyTeam){var dx=myKing.x+increment-p.x;var dy=myKing.y-p.y;switch(p.type){case PieceType.PAWN:{if(isPawnNormalMove(p.x,p.y,myKing.x+increment,myKing.y,p.team,boardState)){return true;}break;}case PieceType.NIGHT:{if(isLegalNightMove(p.x,p.y,dx,dy,boardState)){return true;}break;}case PieceType.BISHOP:{if(isLegalBishopMove(p.x,p.y,dx,dy,boardState)){return true;}break;}case PieceType.ROOK:{if(isLegalRookMove(p.x,p.y,dx,dy,boardState)){return true;}break;}case PieceType.QUEEN:{if(isLegalQueenMove(p.x,p.y,dx,dy,boardState)){return true;}break;}case PieceType.KING:{if(isLegalKingMove(p.x,p.y,dx,dy,boardState)){return true;}break;}}}}return false;}}]);return Checker;}();export{Checker as default};","map":{"version":3,"sources":["/home/jaybird/Coding Projects/Chess4/chess/src/referee/boardChecks.ts"],"names":["PieceType","TeamType","isLegalBishopMove","isLegalRookMove","isLegalQueenMove","isLegalKingMove","isLegalNightMove","isPawnNormalMove","Checker","team","boardState","increment","enemyTeam","WHITE","BLACK","myKing","find","p","type","KING","i","length","dx","x","dy","y","PAWN","NIGHT","BISHOP","ROOK","QUEEN"],"mappings":"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","sourcesContent":["import { PieceType, TeamType, Piece } from \"../constants\"\nimport { isLegalBishopMove, isLegalRookMove, isLegalQueenMove, isLegalKingMove, isLegalNightMove} from \"./pieceLogic\"\nimport { isPawnNormalMove } from \"./pawnLogic\"\n\nexport default class Checker{\n    isMyKingInCheck(team : TeamType, boardState : Piece [], increment : number) : boolean {\n    const enemyTeam = team === TeamType.WHITE ? TeamType.BLACK : TeamType.WHITE\n    const myKing = boardState.find(p => p.team === team && p.type === PieceType.KING) \n    for (let i = 0; i < boardState.length; i++){\n        const p = boardState[i];\n        if (myKing && p.team === enemyTeam) {\n            const dx = myKing.x + increment - p.x\n            const dy = myKing.y - p.y\n            switch (p.type){\n                case PieceType.PAWN : {\n                    if (isPawnNormalMove(p.x, p.y, myKing.x + increment, myKing.y, p.team, boardState)){\n                        return true;\n                    } break;\n                }\n                case PieceType.NIGHT : {\n                    if (isLegalNightMove(p.x, p.y, dx, dy, boardState)){\n                        return true;\n                    } break;\n                }\n                case PieceType.BISHOP : {\n                    if (isLegalBishopMove(p.x, p.y, dx, dy, boardState)){\n                        return true;\n                    } break;\n                }\n                case PieceType.ROOK : {\n                    if (isLegalRookMove(p.x, p.y, dx, dy, boardState)){\n                        return true;\n                    } break;\n                }\n                case PieceType.QUEEN : {\n                    if (isLegalQueenMove(p.x, p.y, dx, dy, boardState)){\n                        return true;\n                    } break;\n                }\n                case PieceType.KING : {\n                    if (isLegalKingMove(p.x, p.y, dx, dy, boardState)){\n                        return true;\n                    } break;\n                }\n            }\n\n        }\n    }\n    return false\n}\n}"]},"metadata":{},"sourceType":"module"}
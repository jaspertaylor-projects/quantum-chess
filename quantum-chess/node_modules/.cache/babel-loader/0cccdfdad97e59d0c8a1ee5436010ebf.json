{"ast":null,"code":"var _jsxFileName = \"/home/jaybird/Coding Projects/QuantumChess/quantum-chess/src/components/CapturedPieces/CapturedPieces.tsx\",\n    _s = $RefreshSig$();\n\nimport './CapturedPieces.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst w_urls = [`assets/white_pieces/k.png`, `assets/white_pieces/q.png`, `assets/white_pieces/r.png`, `assets/white_pieces/b.png`, `assets/white_pieces/n.png`, `assets/white_pieces/p.png`];\nconst b_urls = [`assets/black_pieces/k.png`, `assets/black_pieces/q.png`, `assets/black_pieces/r.png`, `assets/black_pieces/b.png`, `assets/black_pieces/n.png`, `assets/black_pieces/p.png`];\nexport default function CapturedPieces({\n  capturedWhitePieces,\n  capturedBlackPieces\n}) {\n  _s();\n\n  const [capturedWhite, setWhiteCaptured] = useState(capturedWhitePieces);\n  const [capturedBlack, setBlackCaptured] = useState(capturedBlackPieces);\n  useEffect(() => {\n    setWhiteCaptured(capturedWhitePieces);\n  }, [capturedWhite]);\n  useEffect(() => {\n    setBlackCaptured(capturedBlackPieces);\n  }, [capturedBlack]);\n  let w_imgs = [];\n  let b_imgs = [];\n\n  for (let i = 5; i > 0; i--) {\n    for (let j = 0; j < capturedWhitePieces[i]; j++) {\n      w_imgs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cap\",\n        style: {\n          backgroundImage: `url(${w_urls[i]})`\n        }\n      }, `${i}${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this));\n    }\n  }\n\n  for (let i = 5; i > 0; i--) {\n    for (let j = 0; j < capturedBlackPieces[i]; j++) {\n      b_imgs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cap\",\n        style: {\n          backgroundImage: `url(${b_urls[i]})`\n        }\n      }, `${i}${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"white-captured\",\n      children: w_imgs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-captured\",\n      children: b_imgs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n}\n\n_s(CapturedPieces, \"igL+eVA9j3auHol9schD6dKQEuA=\");\n\n_c = CapturedPieces;\n\nvar _c;\n\n$RefreshReg$(_c, \"CapturedPieces\");","map":{"version":3,"sources":["/home/jaybird/Coding Projects/QuantumChess/quantum-chess/src/components/CapturedPieces/CapturedPieces.tsx"],"names":["useState","useEffect","w_urls","b_urls","CapturedPieces","capturedWhitePieces","capturedBlackPieces","capturedWhite","setWhiteCaptured","capturedBlack","setBlackCaptured","w_imgs","b_imgs","i","j","push","backgroundImage"],"mappings":";;;AACA,OAAO,sBAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAGA,MAAMC,MAAM,GAAG,CAAE,2BAAF,EAA+B,2BAA/B,EAA4D,2BAA5D,EACE,2BADF,EAC+B,2BAD/B,EAC4D,2BAD5D,CAAf;AAEA,MAAMC,MAAM,GAAG,CAAE,2BAAF,EAA+B,2BAA/B,EAA4D,2BAA5D,EACE,2BADF,EAC+B,2BAD/B,EAC4D,2BAD5D,CAAf;AAYA,eAAe,SAASC,cAAT,CAAyB;AAACC,EAAAA,mBAAD;AAAsBC,EAAAA;AAAtB,CAAzB,EAA4E;AAAA;;AACvF,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAWK,mBAAX,CAAlD;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAWM,mBAAX,CAAlD;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,gBAAgB,CAACH,mBAAD,CAAhB;AACD,GAFM,EAEJ,CAACE,aAAD,CAFI,CAAT;AAGEN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,gBAAgB,CAACJ,mBAAD,CAAhB;AACD,GAFQ,EAEN,CAACG,aAAD,CAFM,CAAT;AAKF,MAAIE,MAAM,GAAG,EAAb;AACA,MAAIC,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,mBAAmB,CAACQ,CAAD,CAAvC,EAA4CC,CAAC,EAA7C,EAAiD;AAC7CH,MAAAA,MAAM,CAACI,IAAP,eAAY;AAAK,QAAA,SAAS,EAAG,KAAjB;AAAyC,QAAA,KAAK,EAAI;AAACC,UAAAA,eAAe,EAAI,OAAMd,MAAM,CAACW,CAAD,CAAI;AAApC;AAAlD,SAA+B,GAAEA,CAAE,GAAEC,CAAE,EAAvC;AAAA;AAAA;AAAA;AAAA,cAAZ;AACH;AACJ;;AACD,OAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,mBAAmB,CAACO,CAAD,CAAvC,EAA4CC,CAAC,EAA7C,EAAiD;AAC7CF,MAAAA,MAAM,CAACG,IAAP,eAAY;AAAK,QAAA,SAAS,EAAG,KAAjB;AAAyC,QAAA,KAAK,EAAI;AAACC,UAAAA,eAAe,EAAI,OAAMb,MAAM,CAACU,CAAD,CAAI;AAApC;AAAlD,SAA+B,GAAEA,CAAE,GAAEC,CAAE,EAAvC;AAAA;AAAA;AAAA;AAAA,cAAZ;AACH;AACJ;;AACD,sBAAO;AAAA,4BAAK;AAAK,MAAA,SAAS,EAAG,gBAAjB;AAAA,gBAAmCH;AAAnC;AAAA;AAAA;AAAA;AAAA,YAAL,eACK;AAAK,MAAA,SAAS,EAAG,gBAAjB;AAAA,gBAAmCC;AAAnC;AAAA;AAAA;AAAA;AAAA,YADL;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH;;GA5BuBR,c;;KAAAA,c","sourcesContent":["import { PieceType, Piece } from '../../constants'\nimport './CapturedPieces.css'\nimport { useState, useEffect } from 'react';\n\n\nconst w_urls = [`assets/white_pieces/k.png`, `assets/white_pieces/q.png`, `assets/white_pieces/r.png`,\n                `assets/white_pieces/b.png`, `assets/white_pieces/n.png`, `assets/white_pieces/p.png`]\nconst b_urls = [`assets/black_pieces/k.png`, `assets/black_pieces/q.png`, `assets/black_pieces/r.png`,\n                `assets/black_pieces/b.png`, `assets/black_pieces/n.png`, `assets/black_pieces/p.png`]\n\n\n\n\n\ninterface Props {\n    capturedWhitePieces : number [];\n    capturedBlackPieces : number [];\n}\n\nexport default function CapturedPieces ({capturedWhitePieces, capturedBlackPieces} : Props){\n    const [capturedWhite, setWhiteCaptured] = useState<number[]>(capturedWhitePieces)\n    const [capturedBlack, setBlackCaptured] = useState<number[]>(capturedBlackPieces)\n    \n    useEffect(() => {\n        setWhiteCaptured(capturedWhitePieces)\n      }, [capturedWhite])\n      useEffect(() => {\n        setBlackCaptured(capturedBlackPieces);\n      }, [capturedBlack])\n\n\n    let w_imgs = []\n    let b_imgs = []\n\n    for (let i = 5; i > 0; i --){\n        for (let j = 0; j < capturedWhitePieces[i]; j ++){\n            w_imgs.push(<div className = 'cap' key = {`${i}${j}`}style = {{backgroundImage : `url(${w_urls[i]})`}}/>)\n        }\n    }\n    for (let i = 5; i > 0; i --){\n        for (let j = 0; j < capturedBlackPieces[i]; j ++){\n            b_imgs.push(<div className = 'cap' key = {`${i}${j}`}style = {{backgroundImage : `url(${b_urls[i]})`}}/>)\n        }\n    }\n    return <div><div className = 'white-captured'>{w_imgs}</div>                \n                <div className = 'black-captured'>{b_imgs}</div>\n            </div>\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export function executeMove(px, py, x, y, boardState) {\n  const takenPiece = boardState.find(p => p.taken === true);\n\n  if (takenPiece) {\n    takePiece(takenPiece, boardState);\n  }\n\n  const teleportedPiece = boardState.find(p => p.teleported === true);\n\n  if (teleportedPiece) {\n    teleportPiece(teleportedPiece);\n  }\n\n  const currentPiece = boardState.find(p => p.x === px && p.y === py);\n\n  if (currentPiece) {\n    currentPiece.x = x;\n    currentPiece.y = y;\n  }\n}\n\nfunction takePiece(p, boardState) {\n  const id2 = boardState.indexOf(p);\n  boardState.splice(id2, 1);\n}\n\nfunction teleportPiece(p) {\n  let tele = 0;\n\n  if (p.x === 7) {\n    tele = -2;\n  } else {\n    tele = 3;\n  }\n\n  p.x = p.x + tele;\n  p.teleported = false;\n}","map":{"version":3,"sources":["/home/jaybird/Coding Projects/Chess4/chess/src/Referee/executeMove.ts"],"names":["executeMove","px","py","x","y","boardState","takenPiece","find","p","taken","takePiece","teleportedPiece","teleported","teleportPiece","currentPiece","id2","indexOf","splice","tele"],"mappings":"AAEA,OAAO,SAASA,WAAT,CAAsBC,EAAtB,EAAmCC,EAAnC,EAAgDC,CAAhD,EAA4DC,CAA5D,EAAuEC,UAAvE,EAA6F;AAChG,QAAMC,UAAU,GAAGD,UAAU,CAACE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAY,IAAjC,CAAnB;;AACA,MAAIH,UAAJ,EAAe;AACXI,IAAAA,SAAS,CAACJ,UAAD,EAAaD,UAAb,CAAT;AACH;;AACD,QAAMM,eAAe,GAAGN,UAAU,CAACE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACI,UAAF,KAAiB,IAAtC,CAAxB;;AACA,MAAID,eAAJ,EAAoB;AAChBE,IAAAA,aAAa,CAACF,eAAD,CAAb;AACH;;AACD,QAAMG,YAAY,GAAGT,UAAU,CAACE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACL,CAAF,KAAQF,EAAR,IAAcO,CAAC,CAACJ,CAAF,KAAQF,EAA3C,CAArB;;AACA,MAAIY,YAAJ,EAAiB;AACbA,IAAAA,YAAY,CAACX,CAAb,GAAiBA,CAAjB;AACAW,IAAAA,YAAY,CAACV,CAAb,GAAiBA,CAAjB;AACH;AACJ;;AAGD,SAASM,SAAT,CAAmBF,CAAnB,EAA8BH,UAA9B,EAAoD;AAChD,QAAMU,GAAG,GAAGV,UAAU,CAACW,OAAX,CAAmBR,CAAnB,CAAZ;AACAH,EAAAA,UAAU,CAACY,MAAX,CAAkBF,GAAlB,EAAuB,CAAvB;AACH;;AAED,SAASF,aAAT,CAAuBL,CAAvB,EAAiC;AAC7B,MAAIU,IAAI,GAAG,CAAX;;AACA,MAAIV,CAAC,CAACL,CAAF,KAAQ,CAAZ,EAAc;AACVe,IAAAA,IAAI,GAAG,CAAC,CAAR;AACH,GAFD,MAEO;AACHA,IAAAA,IAAI,GAAG,CAAP;AACH;;AACDV,EAAAA,CAAC,CAACL,CAAF,GAAMK,CAAC,CAACL,CAAF,GAAMe,IAAZ;AACAV,EAAAA,CAAC,CAACI,UAAF,GAAe,KAAf;AACH","sourcesContent":["import { Piece } from '../constants'\n\nexport function executeMove (px : number, py : number, x : number, y: number, boardState : Piece []){\n    const takenPiece = boardState.find(p => p.taken === true)\n    if (takenPiece){\n        takePiece(takenPiece, boardState)\n    }\n    const teleportedPiece = boardState.find(p => p.teleported === true)\n    if (teleportedPiece){\n        teleportPiece(teleportedPiece)\n    }\n    const currentPiece = boardState.find(p => p.x === px && p.y === py) \n    if (currentPiece){\n        currentPiece.x = x\n        currentPiece.y = y\n    }\n}\n\n\nfunction takePiece(p : Piece, boardState : Piece []){\n    const id2 = boardState.indexOf(p)\n    boardState.splice(id2, 1)\n}\n\nfunction teleportPiece(p : Piece){\n    let tele = 0;\n    if (p.x === 7){  \n        tele = -2\n    } else {\n        tele = 3\n    }\n    p.x = p.x + tele\n    p.teleported = false\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { PieceType, TeamType } from \"../constants\";\nimport { setEnPassant, checkEnPassant, unsetEnPassant } from \"./epRef\";\nexport default class Referee {\n  pawnIsBlockaded(x, y, boardState) {\n    const piece = boardState.find(p => p.x === x && p.y === y);\n    const occupied = piece ? true : false;\n    return occupied;\n  }\n\n  takePiece(x, y, team, boardState) {\n    const piece = boardState.find(p => p.x === x && p.y === y && p.team !== team);\n\n    if (piece) {\n      console.log('shout out');\n      piece.taken = true;\n    }\n  }\n\n  isFriendlyPiece(x, y, team, boardState) {\n    const piece = boardState.find(p => p.x === x && p.y === y);\n    const occupied = piece && piece.team === team ? true : false;\n    return occupied;\n  }\n\n  endMove(x, y, team, boardState, valid) {\n    if (!this.isFriendlyPiece(x, y, team, boardState)) {\n      this.takePiece(x, y, team, boardState);\n      unsetEnPassant(boardState);\n      valid.value = true;\n    }\n  }\n\n  isValidMove(px, py, x, y, type, team, boardState) {\n    const enemyTeam = team === TeamType.WHITE ? TeamType.BLACK : TeamType.WHITE;\n    var valid = {\n      value: false\n    }; //PAWN LOGIC \n    //May want to put each piece in different function\n\n    if (type === PieceType.PAWN) {\n      const startingRow = team === TeamType.WHITE ? 1 : 6;\n      const increment = team === TeamType.WHITE ? 1 : -1;\n      console.log(px, py, x, y, increment); // Moving Logic\n\n      if (py === startingRow && px === x && py === y - 2 * increment) {\n        if (!this.pawnIsBlockaded(x, y, boardState) && !this.pawnIsBlockaded(x, y - increment, boardState)) {\n          setEnPassant(px, py, boardState);\n          return true;\n        }\n      }\n\n      if (py === y - increment && px === x) {\n        if (!this.pawnIsBlockaded(x, y, boardState)) {\n          unsetEnPassant(boardState);\n          return true;\n        }\n      } // ATTACK LOGIC\n\n\n      if ((x === px + 1 || x === px - 1) && py === y - increment && this.isFriendlyPiece(x, y, enemyTeam, boardState)) {\n        this.endMove(x, y, team, boardState, valid);\n        console.log('validity here', valid);\n      }\n\n      if ((x === px + 1 || x === px - 1) && py === y - increment && this.isFriendlyPiece(x, py, enemyTeam, boardState)) {\n        if (checkEnPassant(x, py, boardState)) {\n          this.endMove(x, py, team, boardState, valid);\n        }\n      }\n    } // NIGHT LOGIC \n\n\n    if (type === PieceType.NIGHT) {\n      if ((px === x + 1 || px === x - 1) && (py === y + 2 || py === y - 2) || (py === y + 1 || py === y - 1) && (px === x + 2 || px === x - 2)) {\n        this.endMove(x, y, team, boardState, valid);\n      }\n    }\n\n    return valid.value;\n  }\n\n}","map":{"version":3,"sources":["/home/jaybird/Coding Projects/Chess4/chess/src/referee/Referee.ts"],"names":["PieceType","TeamType","setEnPassant","checkEnPassant","unsetEnPassant","Referee","pawnIsBlockaded","x","y","boardState","piece","find","p","occupied","takePiece","team","console","log","taken","isFriendlyPiece","endMove","valid","value","isValidMove","px","py","type","enemyTeam","WHITE","BLACK","PAWN","startingRow","increment","NIGHT"],"mappings":"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","sourcesContent":["import { PieceType, TeamType, Piece } from \"../constants\"\nimport { setEnPassant , checkEnPassant, unsetEnPassant} from \"./epRef\"\n\nexport default class Referee{\n    pawnIsBlockaded(x : number, y: number, boardState : Piece []): boolean {\n        const piece = boardState.find(p => p.x === x && p.y === y) \n        const occupied =  piece ? true : false\n        return occupied\n    }\n    takePiece(x : number, y: number, team : TeamType, boardState : Piece []){\n        const piece = boardState.find(p => p.x === x && p.y === y && p.team !== team)  \n        if (piece) {\n            console.log('shout out')\n            piece.taken = true\n        }\n    }\n    isFriendlyPiece(x : number, y: number, team : TeamType, boardState : Piece []): boolean {\n        const piece = boardState.find(p => p.x === x && p.y === y)\n        const occupied =  piece && piece.team === team ? true : false\n        return occupied\n    }\n\n    endMove(x : number, y: number, team : TeamType, boardState : Piece [], valid : any){\n        if (!this.isFriendlyPiece(x, y, team, boardState)){\n            this.takePiece(x, y, team, boardState)\n            unsetEnPassant(boardState)\n            valid.value = true          \n        }\n    }\n    isValidMove(px : number, py : number, x : number, y : number, type : PieceType, team : TeamType, boardState : Piece []){\n        const enemyTeam = team === TeamType.WHITE ? TeamType.BLACK : TeamType.WHITE\n        var valid = { value: false }\n        //PAWN LOGIC \n        //May want to put each piece in different function\n        if (type === PieceType.PAWN){\n            const startingRow = team === TeamType.WHITE ? 1 : 6\n            const increment = team === TeamType.WHITE ? 1 : - 1\n            console.log(px, py, x, y, increment)\n            // Moving Logic\n            if ((py === startingRow && px === x) && (py === y - 2 * increment)){\n                if (!this.pawnIsBlockaded(x, y, boardState) && !this.pawnIsBlockaded(x, y - increment, boardState)){\n                    setEnPassant(px, py, boardState)\n                    return true\n                }\n            } \n            if (py === y - increment && px === x){\n                if (!this.pawnIsBlockaded(x, y, boardState)){\n                    unsetEnPassant(boardState)\n                    return true;\n                }\n            } \n            // ATTACK LOGIC\n            if ((x === px + 1 || x === px -1) && (py === y - increment) && this.isFriendlyPiece(x, y, enemyTeam, boardState)) {\n                this.endMove(x, y, team, boardState, valid)\n                console.log('validity here' , valid)\n            }\n            if ((x === px + 1 || x === px -1) && (py === y - increment) && this.isFriendlyPiece(x, py, enemyTeam, boardState)) {\n                if (checkEnPassant(x, py, boardState)){\n                    this.endMove(x, py, team, boardState, valid)\n                }\n            }\n        }\n        // NIGHT LOGIC \n        if (type === PieceType.NIGHT){\n            if (((px === x + 1 || px === x - 1) &&  (py === y + 2 || py === y - 2)) ||\n                ((py === y + 1 || py === y - 1) &&  (px === x + 2 || px === x - 2))){\n                    this.endMove(x, y, team, boardState, valid)\n            }\n        }\n\n        return valid.value\n    }\n}"]},"metadata":{},"sourceType":"module"}
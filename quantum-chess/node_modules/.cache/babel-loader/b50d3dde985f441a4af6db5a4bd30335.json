{"ast":null,"code":"var _jsxFileName = \"/home/jaybird/Coding Projects/QuantumChess/quantum-chess/src/App.tsx\",\n    _s = $RefreshSig$();\n\n// TODO\n\n/*\nWould be nice to implement a backend and make the game multiplayer across devices\n*/\n// NOTES\n\n/*\nThroughout the code variables with the names px, py are meant to be read as \nprevious x, and previous y respectively.\n*/\nimport './App.css';\nimport Chessboard from './components/Chessboard/chessboard';\nimport { TAKEN_PIECES_BLACK, TAKEN_PIECES_WHITE } from './components/TakePiece/TakePiece';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tpw, setTPW] = useState(TAKEN_PIECES_WHITE);\n  const [tpb, setTPB] = useState(TAKEN_PIECES_BLACK);\n  useEffect(() => {\n    setTPW(TAKEN_PIECES_WHITE);\n  }, []);\n  useEffect(() => {\n    setTPB(TAKEN_PIECES_BLACK);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Chessboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"c9Zg3m+lIGA7cn7zVV/9gWeDzhM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jaybird/Coding Projects/QuantumChess/quantum-chess/src/App.tsx"],"names":["Chessboard","TAKEN_PIECES_BLACK","TAKEN_PIECES_WHITE","React","useState","useEffect","App","tpw","setTPW","tpb","setTPB"],"mappings":";;;AAAA;;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AAGA,OAAO,WAAP;AAEA,OAAOA,UAAP,MAAuB,oCAAvB;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,kCAAvD;AACA,OAAOC,KAAP,IAAuBC,QAAvB,EAAgCC,SAAhC,QAAgD,OAAhD;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAYF,kBAAZ,CAA9B;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAYH,kBAAZ,CAA9B;AACAI,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,MAAM,CAACN,kBAAD,CAAN;AACH,GAFQ,EAEP,EAFO,CAAT;AAGAG,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACT,kBAAD,CAAN;AACD,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACI;AAAK,IAAA,EAAE,EAAG,KAAV;AAAA,2BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAKD;;GAdQK,G;;KAAAA,G;AAgBT,eAAeA,GAAf","sourcesContent":["// TODO\n/*\nWould be nice to implement a backend and make the game multiplayer across devices\n*/\n\n// NOTES\n/*\nThroughout the code variables with the names px, py are meant to be read as \nprevious x, and previous y respectively.\n*/\n\n\nimport './App.css';\nimport CapturedPieces from './components/CapturedPieces/CapturedPieces';\nimport Chessboard from './components/Chessboard/chessboard';\nimport { TAKEN_PIECES_BLACK, TAKEN_PIECES_WHITE } from './components/TakePiece/TakePiece';\nimport React, {useRef, useState,useEffect} from 'react';\n\n\nfunction App() {\n  const [tpw, setTPW] = useState<number []>(TAKEN_PIECES_WHITE)\n  const [tpb, setTPB] = useState<number []>(TAKEN_PIECES_BLACK)\n  useEffect(() => {\n      setTPW(TAKEN_PIECES_WHITE);\n  },[])\n  useEffect(() => {\n    setTPB(TAKEN_PIECES_BLACK);\n  },[])\n  return (\n      <div id = 'App'>\n        <Chessboard></Chessboard>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { PieceType, TeamType } from \"../components/chessboard/chessboard\";\nexport default class Referee {\n  isOccupied(x, y, team, boardState) {\n    const piece = boardState.find(p => p.x === x && p.y === y);\n    const occupied = piece && piece.team === team ? true : false;\n    return occupied;\n  }\n\n  isValidMove(px, py, x, y, type, team, boardState) {\n    console.log(\"Ref checking the move .... \");\n\n    if (type === PieceType.PAWN) {\n      const startingRow = team === TeamType.WHITE ? 1 : 6;\n      const increment = team === TeamType.WHITE ? 1 : -1; // Moving Logic\n\n      if (py === startingRow && px === x && py === y - 2 * increment) {\n        if (!this.isOccupied(x, y, team, boardState) && !this.isOccupied(x, y - increment, team, boardState)) {\n          return true;\n        }\n      }\n\n      if (py === y - increment && px === x) {\n        if (!this.isOccupied(x, y, team, boardState)) {\n          return true;\n        }\n      } // ATTACK LOGIC\n\n\n      if ((x == px + 1 || x == px - 1) && py == y - increment) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}","map":{"version":3,"sources":["/home/jaybird/Coding Projects/Chess4/chess/src/referee/Referee.ts"],"names":["PieceType","TeamType","Referee","isOccupied","x","y","team","boardState","piece","find","p","occupied","isValidMove","px","py","type","console","log","PAWN","startingRow","WHITE","increment"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAA2C,qCAA3C;AAEA,eAAe,MAAMC,OAAN,CAAa;AACxBC,EAAAA,UAAU,CAACC,CAAD,EAAaC,CAAb,EAAwBC,IAAxB,EAAyCC,UAAzC,EAAyE;AAC/E,UAAMC,KAAK,GAAGD,UAAU,CAACE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACN,CAAF,KAAQA,CAAR,IAAaM,CAAC,CAACL,CAAF,KAAQA,CAA1C,CAAd;AACA,UAAMM,QAAQ,GAAIH,KAAK,IAAIA,KAAK,CAACF,IAAN,KAAeA,IAAxB,GAA+B,IAA/B,GAAsC,KAAxD;AACA,WAAOK,QAAP;AACH;;AACDC,EAAAA,WAAW,CAACC,EAAD,EAAcC,EAAd,EAA2BV,CAA3B,EAAuCC,CAAvC,EAAmDU,IAAnD,EAAqET,IAArE,EAAsFC,UAAtF,EAA4G;AACnHS,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AAEA,QAAIF,IAAI,KAAKf,SAAS,CAACkB,IAAvB,EAA4B;AACxB,YAAMC,WAAW,GAAGb,IAAI,KAAKL,QAAQ,CAACmB,KAAlB,GAA0B,CAA1B,GAA8B,CAAlD;AACA,YAAMC,SAAS,GAAGf,IAAI,KAAKL,QAAQ,CAACmB,KAAlB,GAA0B,CAA1B,GAA8B,CAAE,CAAlD,CAFwB,CAGxB;;AACA,UAAKN,EAAE,KAAKK,WAAP,IAAsBN,EAAE,KAAKT,CAA9B,IAAqCU,EAAE,KAAKT,CAAC,GAAG,IAAIgB,SAAxD,EAAmE;AAC/D,YAAI,CAAC,KAAKlB,UAAL,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBC,IAAtB,EAA4BC,UAA5B,CAAD,IAA4C,CAAC,KAAKJ,UAAL,CAAgBC,CAAhB,EAAmBC,CAAC,GAAGgB,SAAvB,EAAkCf,IAAlC,EAAwCC,UAAxC,CAAjD,EAAqG;AACjG,iBAAO,IAAP;AACH;AACJ;;AACD,UAAIO,EAAE,KAAKT,CAAC,GAAGgB,SAAX,IAAwBR,EAAE,KAAKT,CAAnC,EAAqC;AACjC,YAAI,CAAC,KAAKD,UAAL,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBC,IAAtB,EAA4BC,UAA5B,CAAL,EAA6C;AACzC,iBAAO,IAAP;AACH;AACJ,OAbuB,CAcxB;;;AACA,UAAI,CAACH,CAAC,IAAIS,EAAE,GAAG,CAAV,IAAeT,CAAC,IAAIS,EAAE,GAAE,CAAzB,KAAgCC,EAAE,IAAIT,CAAC,GAAGgB,SAA9C,EAA0D;AACtD,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH;;AA7BuB","sourcesContent":["import { PieceType, TeamType, Piece } from \"../components/chessboard/chessboard\"\n\nexport default class Referee{\n    isOccupied(x : number, y: number, team : TeamType, boardState : Piece []): boolean {\n        const piece = boardState.find(p => p.x === x && p.y === y) \n        const occupied =  piece && piece.team === team ? true : false\n        return occupied\n    }\n    isValidMove(px : number, py : number, x : number, y : number, type : PieceType, team : TeamType, boardState : Piece []){\n        console.log(\"Ref checking the move .... \")\n\n        if (type === PieceType.PAWN){\n            const startingRow = team === TeamType.WHITE ? 1 : 6\n            const increment = team === TeamType.WHITE ? 1 : - 1\n            // Moving Logic\n            if ((py === startingRow && px === x) && (py === y - 2 * increment)){\n                if (!this.isOccupied(x, y, team, boardState) && !this.isOccupied(x, y - increment, team, boardState)){\n                    return true\n                }\n            } \n            if (py === y - increment && px === x){\n                if (!this.isOccupied(x, y, team, boardState)){\n                    return true;\n                }\n            } \n            // ATTACK LOGIC\n            if ((x == px + 1 || x == px -1) && (py == y - increment)) {\n                return true\n            }\n        }\n        return false\n    }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from\"/home/jaybird/Coding Projects/Chess4/chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jaybird/Coding Projects/Chess4/chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{PieceType,TeamType}from\"../constants\";import{isPawnNormalMove,isEnPassant,isPawnStartingMove,isFriendlyPiece,unsetEnPassant,setEnPassant}from\"./pawnLogic\";import{isLegalBishopMove,isLegalRookMove,isLegalQueenMove,isLegalKingMove,isLegalNightMove}from\"./pieceLogic\";var Referee=/*#__PURE__*/function(){function Referee(){_classCallCheck(this,Referee);}_createClass(Referee,[{key:\"takePiece\",value:function takePiece(x,y,team,boardState){var piece=boardState.find(function(p){return p.x===x&&p.y===y&&p.team!==team;});if(piece){piece.taken=true;}}},{key:\"endMove\",value:function endMove(x,y,team,boardState,valid){if(!isFriendlyPiece(x,y,team,boardState)){this.takePiece(x,y,team,boardState);unsetEnPassant(boardState);valid.value=true;}}},{key:\"isValidMove\",value:function isValidMove(px,py,x,y,type,team,boardState,activePlayer){// Only the active player can move\nif(team!==activePlayer){return false;}// A non-move is not a move\nif(px===x&&py===y){return false;}var valid={value:false};var dx=x-px;var dy=y-py;switch(type){case PieceType.PAWN:{var increment=team===TeamType.WHITE?1:-1;if(isPawnStartingMove(px,py,x,y,team,boardState,increment)){setEnPassant(px,py,boardState);return true;}if(isPawnNormalMove(px,py,x,y,team,boardState,increment)){this.endMove(x,y,team,boardState,valid);break;}if(isEnPassant(px,py,x,y,team,boardState,increment)){this.endMove(x,py,team,boardState,valid);break;}break;}case PieceType.NIGHT:{if(isLegalNightMove(px,py,dx,dy,boardState)){this.endMove(x,y,team,boardState,valid);break;}break;}case PieceType.BISHOP:{if(isLegalBishopMove(px,py,dx,dy,boardState)){this.endMove(x,y,team,boardState,valid);break;}break;}case PieceType.ROOK:{if(isLegalRookMove(px,py,dx,dy,boardState)){this.endMove(x,y,team,boardState,valid);break;}break;}case PieceType.QUEEN:{if(isLegalQueenMove(px,py,dx,dy,boardState)){this.endMove(x,y,team,boardState,valid);break;}break;}case PieceType.KING:{if(isLegalKingMove(px,py,dx,dy,boardState)){this.endMove(x,y,team,boardState,valid);break;}break;}}return valid.value;}}]);return Referee;}();export{Referee as default};","map":{"version":3,"sources":["/home/jaybird/Coding Projects/Chess4/chess/src/referee/Referee.ts"],"names":["PieceType","TeamType","isPawnNormalMove","isEnPassant","isPawnStartingMove","isFriendlyPiece","unsetEnPassant","setEnPassant","isLegalBishopMove","isLegalRookMove","isLegalQueenMove","isLegalKingMove","isLegalNightMove","Referee","x","y","team","boardState","piece","find","p","taken","valid","takePiece","value","px","py","type","activePlayer","dx","dy","PAWN","increment","WHITE","endMove","NIGHT","BISHOP","ROOK","QUEEN","KING"],"mappings":"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","sourcesContent":["import { PieceType, TeamType, Piece } from \"../constants\"\nimport { isPawnNormalMove, isEnPassant, isPawnStartingMove, isFriendlyPiece, unsetEnPassant, setEnPassant } from \"./pawnLogic\"\nimport { isLegalBishopMove, isLegalRookMove, isLegalQueenMove, isLegalKingMove, isLegalNightMove} from \"./pieceLogic\"\n\nexport default class Referee{\n    takePiece(x : number, y: number, team : TeamType, boardState : Piece []){\n        const piece = boardState.find(p => p.x === x && p.y === y && p.team !== team)  \n        if (piece) {\n            piece.taken = true\n        }\n    }\n    endMove(x : number, y: number, team : TeamType, boardState : Piece [], valid : any){\n        if (!isFriendlyPiece(x, y, team, boardState)){\n            this.takePiece(x, y, team, boardState)\n            unsetEnPassant(boardState)\n            valid.value = true          \n        }\n    }\n    isValidMove(px : number, py : number, x : number, y : number, type : PieceType, \n                team : TeamType, boardState : Piece [], activePlayer : TeamType){\n        // Only the active player can move\n        if (team !== activePlayer){\n            return false\n        }\n        // A non-move is not a move\n        if (px === x && py === y){\n            return false\n        }\n        var valid = { value: false }\n        const dx = x - px\n        const dy = y - py\n\n        switch(type){\n            case PieceType.PAWN : {\n                const increment = team === TeamType.WHITE ? 1 : - 1\n                if (isPawnStartingMove(px, py, x, y, team, boardState, increment)){\n                    setEnPassant(px, py, boardState)\n                    return true\n                }\n                if (isPawnNormalMove(px, py, x, y, team, boardState, increment)){\n                    this.endMove(x, y, team, boardState, valid)\n                    break;\n                }\n                if (isEnPassant(px, py, x, y, team, boardState, increment)){\n                    this.endMove(x, py, team, boardState, valid)\n                    break;\n                }\n                break;\n            }\n            case PieceType.NIGHT : {\n                if (isLegalNightMove(px, py, dx, dy, boardState)){\n                    this.endMove(x, y, team, boardState, valid)\n                    break;\n                }\n                break;\n            }\n            case PieceType.BISHOP : {\n                if (isLegalBishopMove(px, py, dx, dy, boardState)){\n                    this.endMove(x, y, team, boardState, valid)\n                    break;\n                }\n                break;\n            }\n            case PieceType.ROOK : {\n                if (isLegalRookMove(px, py, dx, dy, boardState)){\n                    this.endMove(x, y, team, boardState, valid)\n                    break;\n                }\n                break;\n            }\n            case PieceType.QUEEN : {\n                if (isLegalQueenMove(px, py, dx, dy, boardState)){\n                    this.endMove(x, y, team, boardState, valid)\n                    break;\n                }\n                break;\n            }\n            case PieceType.KING : {\n                if (isLegalKingMove(px, py, dx, dy, boardState)){\n                    this.endMove(x, y, team, boardState, valid)\n                    break;\n                }\n                break;\n            }\n        }\n    return valid.value\n    }\n}"]},"metadata":{},"sourceType":"module"}
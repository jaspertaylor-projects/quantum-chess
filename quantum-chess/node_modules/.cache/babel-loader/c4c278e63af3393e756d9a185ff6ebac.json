{"ast":null,"code":"import _slicedToArray from\"/home/jaybird/Coding Projects/Chess4/chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from'react';import Tile from'../Tile/Tile';import'./chessboard.css';import Referee from'../../referee/Referee';import{verticalAxis,horizontalAxis,TeamType,initialBoardState}from'../../constants';import Checker from'./boardChecks';import{jsx as _jsx}from\"react/jsx-runtime\";export default function Chessboard(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),activePiece=_useState2[0],setActivePiece=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),gridX=_useState4[0],setGridX=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),gridY=_useState6[0],setGridY=_useState6[1];var _useState7=useState(initialBoardState),_useState8=_slicedToArray(_useState7,2),pieces=_useState8[0],setPieces=_useState8[1];var chessboardRef=useRef(null);var referee=new Referee();var checker=new Checker();var _useState9=useState(TeamType.WHITE),_useState10=_slicedToArray(_useState9,2),activePlayer=_useState10[0],setActivePlayer=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),inCheck=_useState12[0],setInCheck=_useState12[1];function grabPiece(e){var chessboard=chessboardRef.current;var element=e.target;if(element.classList.contains('chess-piece')&&chessboard){setGridX(Math.floor((e.clientX-chessboard.offsetLeft)/100));setGridY(Math.abs(Math.ceil((e.clientY-chessboard.offsetTop-800)/100)));var x=e.clientX-50;var y=e.clientY-50;element.style.position='absolute';element.style.left=\"\".concat(x,\"px\");element.style.top=\"\".concat(y,\"px\");setActivePiece(element);}}function movePiece(e){var chessboard=chessboardRef.current;if(activePiece&&chessboard){var minX=chessboard.offsetLeft-25;var minY=chessboard.offsetTop-25;var maxX=chessboard.offsetLeft+chessboard.clientWidth-75;var maxY=chessboard.offsetTop+chessboard.clientHeight-75;var x=e.clientX-50;var y=e.clientY-50;activePiece.style.position='absolute';if(x<minX){activePiece.style.left=\"\".concat(minX,\"px\");}else if(x>maxX){activePiece.style.left=\"\".concat(maxX,\"px\");}else{activePiece.style.left=\"\".concat(x,\"px\");}if(y<minY){activePiece.style.top=\"\".concat(minY,\"px\");}else if(y>maxY){activePiece.style.top=\"\".concat(maxY,\"px\");}else{activePiece.style.top=\"\".concat(y,\"px\");}}}function dropPiece(e){var chessboard=chessboardRef.current;if(activePiece&&chessboard){var x=Math.floor((e.clientX-chessboard.offsetLeft)/100);var y=Math.abs(Math.ceil((e.clientY-chessboard.offsetTop-800)/100));var currentPiece=pieces.find(function(p){return p.x===gridX&&p.y===gridY;});if(currentPiece){var validMove=referee.isValidMove(gridX,gridY,x,y,currentPiece.type,currentPiece.team,pieces,activePlayer);var check=checker.isMyKingInCheck(currentPiece.team,pieces);setInCheck(check);console.log(inCheck,check);if(validMove&&!inCheck){var nextPlayer=activePlayer===TeamType.WHITE?TeamType.BLACK:TeamType.WHITE;setActivePlayer(nextPlayer);setPieces(pieces);var takenPiece=pieces.find(function(p){return p.taken===true;});var id1=pieces.indexOf(currentPiece);currentPiece.x=x;currentPiece.y=y;pieces[id1]=currentPiece;if(takenPiece){var id2=pieces.indexOf(takenPiece);pieces.splice(id2,1);}setPieces(pieces);}else{activePiece.style.position='relative';activePiece.style.removeProperty('left');activePiece.style.removeProperty('top');}}}setActivePiece(null);}var board=[];var _loop=function _loop(j){var _loop2=function _loop2(i){var number=i+j;var image=undefined;pieces.forEach(function(p){if(p.x===i&&p.y===j){image=p.image;}});board.push(/*#__PURE__*/_jsx(Tile,{image:image,number:number},\"\".concat(i,\", \").concat(j)));};for(var i=0;i<horizontalAxis.length;i++){_loop2(i);}};for(var j=verticalAxis.length-1;j>=0;j--){_loop(j);}return/*#__PURE__*/_jsx(\"div\",{ref:chessboardRef,onMouseUp:function onMouseUp(e){return dropPiece(e);},onMouseMove:function onMouseMove(e){return movePiece(e);},onMouseDown:function onMouseDown(e){return grabPiece(e);},id:\"chessboard\",children:board});}","map":{"version":3,"sources":["/home/jaybird/Coding Projects/Chess4/chess/src/components/chessboard/chessboard.tsx"],"names":["React","useRef","useState","Tile","Referee","verticalAxis","horizontalAxis","TeamType","initialBoardState","Checker","Chessboard","activePiece","setActivePiece","gridX","setGridX","gridY","setGridY","pieces","setPieces","chessboardRef","referee","checker","WHITE","activePlayer","setActivePlayer","inCheck","setInCheck","grabPiece","e","chessboard","current","element","target","classList","contains","Math","floor","clientX","offsetLeft","abs","ceil","clientY","offsetTop","x","y","style","position","left","top","movePiece","minX","minY","maxX","clientWidth","maxY","clientHeight","dropPiece","currentPiece","find","p","validMove","isValidMove","type","team","check","isMyKingInCheck","console","log","nextPlayer","BLACK","takenPiece","taken","id1","indexOf","id2","splice","removeProperty","board","j","i","number","image","undefined","forEach","push","length"],"mappings":"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","sourcesContent":["import React, {useRef, useState } from 'react';\nimport Tile from '../Tile/Tile';\nimport './chessboard.css';\nimport Referee from '../../referee/Referee'\nimport {verticalAxis, horizontalAxis, Piece, TeamType, initialBoardState} from '../../constants'\nimport Checker from './boardChecks'\n\nexport default function Chessboard(){\n    const [activePiece, setActivePiece] = useState<HTMLElement | null>(null) \n    const [gridX, setGridX] = useState(0);\n    const [gridY, setGridY] = useState(0);\n    const [pieces, setPieces]  = useState<Piece[]>(initialBoardState);\n    const chessboardRef = useRef<HTMLDivElement>(null);\n    const referee = new Referee();\n    const checker = new Checker();\n    const [activePlayer, setActivePlayer] = useState<TeamType>(TeamType.WHITE);\n    const [inCheck, setInCheck] = useState<boolean>(false)\n\n    function grabPiece(e: React.MouseEvent){\n        const chessboard = chessboardRef.current\n        const element = e.target as HTMLElement\n        if (element.classList.contains('chess-piece') && chessboard){\n            setGridX(Math.floor((e.clientX - chessboard.offsetLeft)/100));\n            setGridY(Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800)/100)));\n            const x = e.clientX - 50;\n            const y = e.clientY - 50;\n            element.style.position = 'absolute'; \n            element.style.left = `${x}px`;\n            element.style.top = `${y}px`;\n            setActivePiece(element)    \n        }\n    \n    }\n    \n    function movePiece(e: React.MouseEvent){\n        const chessboard = chessboardRef.current\n        if (activePiece && chessboard){\n            const minX = chessboard.offsetLeft - 25;\n            const minY = chessboard.offsetTop - 25;\n            const maxX = chessboard.offsetLeft + chessboard.clientWidth -75;\n            const maxY = chessboard.offsetTop + chessboard.clientHeight -75;\n            const x = e.clientX -50;\n            const y = e.clientY -50;\n            activePiece.style.position = 'absolute'; \n            if (x < minX) {\n                activePiece.style.left = `${minX}px` ;\n            } else if (x > maxX) {\n                activePiece.style.left = `${maxX}px`;\n            } else {\n                activePiece.style.left = `${x}px`;\n            }\n            if (y < minY) {\n                activePiece.style.top = `${minY}px`;\n            } else if (y > maxY) {\n                activePiece.style.top = `${maxY}px`;\n            } else {\n                activePiece.style.top = `${y}px`;\n            }\n        }\n    }\n    \n    function dropPiece(e: React.MouseEvent){\n        const chessboard = chessboardRef.current;\n        if (activePiece && chessboard){\n            const x = Math.floor((e.clientX - chessboard.offsetLeft)/100);\n            const y = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800)/100))\n            const currentPiece = pieces.find(p => p.x === gridX && p.y ===gridY)\n            if (currentPiece){\n                const validMove = referee.isValidMove(gridX, gridY, x, y, currentPiece.type, currentPiece.team, pieces, activePlayer);\n                const check = checker.isMyKingInCheck(currentPiece.team, pieces);                \n                setInCheck(check) \n                console.log(inCheck, check)\n                if (validMove && !inCheck){\n                    const nextPlayer = activePlayer === TeamType.WHITE ? TeamType.BLACK : TeamType.WHITE\n                    setActivePlayer(nextPlayer)\n                    setPieces(pieces)\n                    const takenPiece = pieces.find(p => p.taken === true)\n                    const id1 = pieces.indexOf(currentPiece)\n                    currentPiece.x = x\n                    currentPiece.y = y\n                    pieces[id1] = currentPiece\n                    if (takenPiece){\n                        const id2 = pieces.indexOf(takenPiece)\n                        pieces.splice(id2, 1)\n                    }\n                setPieces(pieces)\n                } else {\n                    activePiece.style.position = 'relative';\n                    activePiece.style.removeProperty('left');\n                    activePiece.style.removeProperty('top');\n                }\n            }\n        }\n        setActivePiece(null);\n    }\n    let board = [];\n    for (let j = verticalAxis.length - 1; j >= 0; j-- ){\n        for (let i = 0; i < horizontalAxis.length; i++ ) {\n            const number = i + j;\n            let image = undefined;\n            pieces.forEach(p => {\n                if (p.x === i && p.y === j){\n                    image = p.image;\n                }\n                \n            }); \n            board.push(<Tile key = {`${i}, ${j}`} image = {image} number = {number}/>);\n        }\n    }\n    return <div \n    ref = {chessboardRef} \n    onMouseUp = {e => dropPiece(e)} \n    onMouseMove = {e => movePiece(e)} \n    onMouseDown = {e => grabPiece(e)} \n    id = 'chessboard'>{board}</div>;\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export const HORIZONTAL_AXIS = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nexport const VERTICAL_AXIS = [1, 2, 3, 4, 5, 6, 7, 8];\nexport const GRID_SIZE = 100;\nexport let TeamType;\n\n(function (TeamType) {\n  TeamType[TeamType[\"WHITE\"] = 0] = \"WHITE\";\n  TeamType[TeamType[\"BLACK\"] = 1] = \"BLACK\";\n})(TeamType || (TeamType = {}));\n\nexport let PieceType;\n\n(function (PieceType) {\n  PieceType[PieceType[\"PAWN\"] = 0] = \"PAWN\";\n  PieceType[PieceType[\"BISHOP\"] = 1] = \"BISHOP\";\n  PieceType[PieceType[\"NIGHT\"] = 2] = \"NIGHT\";\n  PieceType[PieceType[\"ROOK\"] = 3] = \"ROOK\";\n  PieceType[PieceType[\"QUEEN\"] = 4] = \"QUEEN\";\n  PieceType[PieceType[\"KING\"] = 5] = \"KING\";\n})(PieceType || (PieceType = {}));\n\nexport const initialGameState = {\n  WHITE_CASTLE_KINGSIDE: true,\n  WHITE_CASTLE_QUEENSIDE: true,\n  BLACK_CASTLE_KINGSIDE: true,\n  BLACK_CASTLE_QUEENSIDE: true,\n  WHITE_IN_CHECKMATE: false,\n  BLACK_IN_CHECKMATE: false\n};\nexport const initialBoardState = [];\n\nfor (let p = 0; p < 2; p++) {\n  const type = p === 0 ? 'b' : 'w';\n  const team = p === 0 ? TeamType.BLACK : TeamType.WHITE;\n  const y = p === 0 ? 7 : 0; // Rooks\n\n  initialBoardState.push({\n    image: `assets/images/rook_${type}.png`,\n    x: 0,\n    y,\n    team,\n    type: PieceType.ROOK,\n    enPassantable: false\n  });\n  initialBoardState.push({\n    image: `assets/images/rook_${type}.png`,\n    x: 7,\n    y,\n    team,\n    type: PieceType.ROOK,\n    enPassantable: false\n  }); // Nights\n\n  initialBoardState.push({\n    image: `assets/images/night_${type}.png`,\n    x: 1,\n    y,\n    team,\n    type: PieceType.NIGHT,\n    enPassantable: false\n  });\n  initialBoardState.push({\n    image: `assets/images/night_${type}.png`,\n    x: 6,\n    y,\n    team,\n    type: PieceType.NIGHT,\n    enPassantable: false\n  }); // Bishops\n\n  initialBoardState.push({\n    image: `assets/images/bishop_${type}.png`,\n    x: 2,\n    y,\n    team,\n    type: PieceType.BISHOP,\n    enPassantable: false\n  });\n  initialBoardState.push({\n    image: `assets/images/bishop_${type}.png`,\n    x: 5,\n    y,\n    team,\n    type: PieceType.BISHOP,\n    enPassantable: false\n  }); // Queens\n\n  initialBoardState.push({\n    image: `assets/images/queen_${type}.png`,\n    x: 3,\n    y,\n    team,\n    type: PieceType.QUEEN,\n    enPassantable: false\n  }); // Kings\n\n  initialBoardState.push({\n    image: `assets/images/king_${type}.png`,\n    x: 4,\n    y,\n    team,\n    type: PieceType.KING,\n    enPassantable: false\n  });\n} // Pawns\n\n\nfor (let i = 0; i < HORIZONTAL_AXIS.length; i++) {\n  initialBoardState.push({\n    image: 'assets/images/pawn_b.png',\n    x: i,\n    y: 6,\n    team: TeamType.BLACK,\n    type: PieceType.PAWN,\n    enPassantable: false\n  });\n}\n\nfor (let i = 0; i < HORIZONTAL_AXIS.length; i++) {\n  initialBoardState.push({\n    image: 'assets/images/pawn_w.png',\n    x: i,\n    y: 1,\n    team: TeamType.WHITE,\n    type: PieceType.PAWN,\n    enPassantable: false\n  });\n}","map":{"version":3,"sources":["/home/jaybird/Coding Projects/Chess4/chess/src/constants.ts"],"names":["HORIZONTAL_AXIS","VERTICAL_AXIS","GRID_SIZE","TeamType","PieceType","initialGameState","WHITE_CASTLE_KINGSIDE","WHITE_CASTLE_QUEENSIDE","BLACK_CASTLE_KINGSIDE","BLACK_CASTLE_QUEENSIDE","WHITE_IN_CHECKMATE","BLACK_IN_CHECKMATE","initialBoardState","p","type","team","BLACK","WHITE","y","push","image","x","ROOK","enPassantable","NIGHT","BISHOP","QUEEN","KING","i","length","PAWN"],"mappings":"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","sourcesContent":["export const HORIZONTAL_AXIS = ['a', 'b', 'c', 'd', 'e', 'f',   'g', 'h'];\nexport const VERTICAL_AXIS = [1,2,3,4,5,6,7,8];\nexport const GRID_SIZE = 100\n\nexport interface Piece {\n    image: string;\n    x : number; \n    y : number; \n    type : PieceType;\n    team : TeamType;\n    enPassantable? : boolean;\n    taken? : boolean;\n}\n\nexport enum TeamType{\n    WHITE,\n    BLACK\n}\n\nexport enum PieceType {\n    PAWN,\n    BISHOP, \n    NIGHT, \n    ROOK,\n    QUEEN,\n    KING,\n}\n\nexport interface GameState{\n    WHITE_CASTLE_KINGSIDE : boolean,\n    WHITE_CASTLE_QUEENSIDE : boolean,\n    BLACK_CASTLE_KINGSIDE : boolean,\n    BLACK_CASTLE_QUEENSIDE : boolean,\n    WHITE_IN_CHECKMATE : boolean,\n    BLACK_IN_CHECKMATE : boolean   \n}\nexport const initialGameState : GameState = {WHITE_CASTLE_KINGSIDE : true, \n                                            WHITE_CASTLE_QUEENSIDE : true, \n                                            BLACK_CASTLE_KINGSIDE : true, \n                                            BLACK_CASTLE_QUEENSIDE : true,\n                                            WHITE_IN_CHECKMATE : false,\n                                            BLACK_IN_CHECKMATE : false,\n                                        }\nexport const initialBoardState : Piece[] = [];\n\nfor (let p = 0; p < 2; p ++){\n    const type = p === 0 ? 'b': 'w';\n    const team = p === 0 ? TeamType.BLACK : TeamType.WHITE;\n    const y = p === 0 ?  7 : 0;\n    // Rooks\n    initialBoardState.push({image : `assets/images/rook_${type}.png`, x : 0,  y, team, type : PieceType.ROOK, enPassantable : false})\n    initialBoardState.push({image : `assets/images/rook_${type}.png`, x : 7,  y, team, type : PieceType.ROOK, enPassantable : false})\n\n    // Nights\n    initialBoardState.push({image : `assets/images/night_${type}.png`, x : 1,  y, team, type : PieceType.NIGHT, enPassantable : false})\n    initialBoardState.push({image : `assets/images/night_${type}.png`, x : 6,  y, team, type : PieceType.NIGHT, enPassantable : false})\n\n    // Bishops\n    initialBoardState.push({image : `assets/images/bishop_${type}.png`, x : 2,  y, team, type : PieceType.BISHOP, enPassantable : false})\n    initialBoardState.push({image : `assets/images/bishop_${type}.png`, x : 5,  y, team, type : PieceType.BISHOP, enPassantable : false})\n\n    // Queens\n    initialBoardState.push({image : `assets/images/queen_${type}.png`, x : 3,  y, team, type : PieceType.QUEEN, enPassantable : false})\n    // Kings\n    initialBoardState.push({image : `assets/images/king_${type}.png`, x : 4,  y, team, type : PieceType.KING, enPassantable : false})\n\n}\n\n// Pawns\nfor (let i = 0; i < HORIZONTAL_AXIS.length; i++){\n    initialBoardState.push({image : 'assets/images/pawn_b.png', x : i, y : 6, team : TeamType.BLACK, type : PieceType.PAWN, enPassantable : false})\n}\nfor (let i = 0; i < HORIZONTAL_AXIS.length; i++){\n    initialBoardState.push({image : 'assets/images/pawn_w.png', x : i, y : 1, team : TeamType.WHITE, type : PieceType.PAWN, enPassantable : false})\n}"]},"metadata":{},"sourceType":"module"}
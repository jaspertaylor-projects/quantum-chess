{"ast":null,"code":"import{PieceType,TeamType}from'../constants';import Checker from'./boardChecks';export function isLegalRookMove(px,py,dx,dy,boardState){if(dx===0||dy===0){if(dx===0){var _ret=function(){var y_dir=Math.sign(dy);var _loop=function _loop(i){var obstructingPiece=boardState.find(function(p){return p.x===px&&p.y===py+i*y_dir;});if(obstructingPiece){return{v:{v:false}};}};for(var i=1;i<Math.abs(dy);i++){var _ret2=_loop(i);if(typeof _ret2===\"object\")return _ret2.v;}return{v:true};}();if(typeof _ret===\"object\")return _ret.v;}if(dy===0){var _ret3=function(){var x_dir=Math.sign(dx);var _loop2=function _loop2(i){var obstructingPiece=boardState.find(function(p){return p.x===px+i*x_dir&&p.y===py;});if(obstructingPiece){return{v:{v:false}};}};for(var i=1;i<Math.abs(dx);i++){var _ret4=_loop2(i);if(typeof _ret4===\"object\")return _ret4.v;}return{v:true};}();if(typeof _ret3===\"object\")return _ret3.v;}}return false;}export function isLegalBishopMove(px,py,dx,dy,boardState){if(Math.abs(dx)===Math.abs(dy)){var _ret5=function(){var x_dir=Math.sign(dx);var y_dir=Math.sign(dy);var _loop3=function _loop3(i){var obstructingPiece=boardState.find(function(p){return p.x===px+i*x_dir&&p.y===py+i*y_dir;});if(obstructingPiece){return{v:{v:false}};}};for(var i=1;i<Math.abs(dx);i++){var _ret6=_loop3(i);if(typeof _ret6===\"object\")return _ret6.v;}return{v:true};}();if(typeof _ret5===\"object\")return _ret5.v;}return false;}export function isLegalNightMove(px,py,dx,dy,boardState){if(Math.abs(dx)===1&&Math.abs(dy)===2||Math.abs(dx)===2&&Math.abs(dy)===1){return true;}return false;}export function isLegalQueenMove(px,py,dx,dy,boardState){var legality=isLegalRookMove(px,py,dx,dy,boardState)||isLegalBishopMove(px,py,dx,dy,boardState);return legality;}export function isLegalKingMove(px,py,dx,dy,boardState){if(Math.abs(dx)<2&&Math.abs(dy)<2){return true;}return false;}export function isCastleMove(px,py,dx,dy,team,boardState){var checker=new Checker();var king=boardState.find(function(p){return p.type===PieceType.KING&&p.team===team;});if(team===TeamType.WHITE){if((king===null||king===void 0?void 0:king.canCastle)===true&&dx===-2){var rook=boardState.find(function(p){return p.x===0&&p.y===0;});if(rook===null||rook===void 0?void 0:rook.canCastle){if(!checker.isMyKingInCheck(team,boardState,0)&&!checker.isMyKingInCheck(team,boardState,-1)&&!checker.isMyKingInCheck(team,boardState,-2)){if(isLegalRookMove(king.x,king.y,-4,0,boardState)){return true;}}}}if((king===null||king===void 0?void 0:king.canCastle)===true&&dx===2){var _rook=boardState.find(function(p){return p.x===7&&p.y===0;});if(_rook===null||_rook===void 0?void 0:_rook.canCastle){if(!checker.isMyKingInCheck(team,boardState,0)&&!checker.isMyKingInCheck(team,boardState,1)&&!checker.isMyKingInCheck(team,boardState,2)){if(isLegalRookMove(king.x,king.y,3,0,boardState)){return true;}}}}}if(team===TeamType.BLACK){if((king===null||king===void 0?void 0:king.canCastle)===true&&dx===-2){var _rook2=boardState.find(function(p){return p.x===0&&p.y===7;});if(_rook2===null||_rook2===void 0?void 0:_rook2.canCastle){if(!checker.isMyKingInCheck(team,boardState,0)&&!checker.isMyKingInCheck(team,boardState,-1)&&!checker.isMyKingInCheck(team,boardState,-2)){if(isLegalRookMove(king.x,king.y,-4,0,boardState)){return true;}}}}if((king===null||king===void 0?void 0:king.canCastle)===true&&dx===2){var _rook3=boardState.find(function(p){return p.x===7&&p.y===7;});if(_rook3===null||_rook3===void 0?void 0:_rook3.canCastle){if(!checker.isMyKingInCheck(team,boardState,0)&&!checker.isMyKingInCheck(team,boardState,1)&&!checker.isMyKingInCheck(team,boardState,2)){if(isLegalRookMove(king.x,king.y,3,0,boardState)){return true;}return true;}}}}return false;}","map":{"version":3,"sources":["/home/jaybird/Coding Projects/Chess4/chess/src/referee/pieceLogic.ts"],"names":["PieceType","TeamType","Checker","isLegalRookMove","px","py","dx","dy","boardState","y_dir","Math","sign","i","obstructingPiece","find","p","x","y","abs","x_dir","isLegalBishopMove","isLegalNightMove","isLegalQueenMove","legality","isLegalKingMove","isCastleMove","team","checker","king","type","KING","WHITE","canCastle","rook","isMyKingInCheck","BLACK"],"mappings":"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","sourcesContent":["import { Piece , PieceType, TeamType} from '../constants'\nimport Checker from './boardChecks'\n\nexport function isLegalRookMove(px : number, py : number, dx : number, dy : number, boardState : Piece[]) : boolean {\n    if (dx === 0 || dy === 0){\n        if (dx === 0){\n            const y_dir = Math.sign(dy)\n            for (let i = 1; i < Math.abs(dy); i ++){\n                const obstructingPiece = boardState.find(p => p.x === px && p.y === py + i*y_dir) \n                if (obstructingPiece){\n                    return false\n                }\n            } \n            return true\n        }\n        if (dy === 0){\n            const x_dir = Math.sign(dx)\n            for (let i = 1; i < Math.abs(dx); i ++){\n                const obstructingPiece = boardState.find(p => p.x === px + i*x_dir && p.y === py) \n                if (obstructingPiece){\n                    return false\n                }\n            } \n            return true\n        }\n    } \n    return false;\n}\n\nexport function isLegalBishopMove(px : number, py : number, dx : number, dy : number, boardState : Piece[]) : boolean{\n    if (Math.abs(dx) === Math.abs(dy)){\n        const x_dir = Math.sign(dx)\n        const y_dir = Math.sign(dy)\n        for (let i = 1; i < Math.abs(dx); i ++){\n            const obstructingPiece = boardState.find(p => p.x === px + i*x_dir && p.y === py + i*y_dir) \n            if (obstructingPiece){\n                return false\n            }\n        } \n        return true\n    } \n    return false\n}\nexport function isLegalNightMove(px : number, py : number, dx : number, dy : number, boardState : Piece[]) : boolean{\n    if ((Math.abs(dx) === 1 && Math.abs(dy) === 2) || (Math.abs(dx) === 2 && Math.abs(dy) === 1)){\n        return true\n    }\n    return false\n}\nexport function isLegalQueenMove(px : number, py : number, dx : number, dy : number, boardState : Piece[]) : boolean{\n    const legality = isLegalRookMove(px, py, dx, dy, boardState) || isLegalBishopMove(px, py, dx, dy, boardState)\n    return legality\n}\n\n\nexport function isLegalKingMove(px : number, py : number, dx : number, dy : number, boardState : Piece[]) : boolean{\n    if (Math.abs(dx) < 2 && Math.abs(dy) < 2){\n        return true\n    } \n    return false\n}\n\nexport function isCastleMove(px : number, py : number, dx : number, dy : number, team : TeamType,\n                            boardState : Piece[]) : boolean{\n    const checker = new Checker();\n    const king = boardState.find(p => p.type === PieceType.KING && p.team === team)\n    if (team === TeamType.WHITE){\n        if (king?.canCastle === true && dx === - 2){\n            const rook = boardState.find(p => p.x === 0 && p.y === 0)\n            if (rook?.canCastle){\n                if (!checker.isMyKingInCheck(team, boardState, 0) && \n                    !checker.isMyKingInCheck(team, boardState, -1) &&\n                    !checker.isMyKingInCheck(team, boardState, -2)){\n                        if (isLegalRookMove(king.x, king.y, -4, 0, boardState)){\n                            return true\n                        }\n                }\n            }\n        } \n        if (king?.canCastle === true && dx === 2){\n            const rook = boardState.find(p => p.x === 7 && p.y === 0)\n            if (rook?.canCastle){\n                if (!checker.isMyKingInCheck(team, boardState, 0) && \n                    !checker.isMyKingInCheck(team, boardState, 1) &&\n                    !checker.isMyKingInCheck(team, boardState, 2)){\n                        if (isLegalRookMove(king.x, king.y, 3, 0, boardState)){\n                            return true\n                        }\n                }\n            }\n        } \n    }\n    if (team === TeamType.BLACK){\n        if (king?.canCastle === true && dx === - 2){\n            const rook = boardState.find(p => p.x === 0 && p.y === 7)\n            if (rook?.canCastle){\n                if (!checker.isMyKingInCheck(team, boardState, 0) && \n                    !checker.isMyKingInCheck(team, boardState, -1) &&\n                    !checker.isMyKingInCheck(team, boardState, -2)){\n                        if (isLegalRookMove(king.x, king.y, -4, 0, boardState)){\n                            return true\n                        }\n                }\n            }\n        } \n        if (king?.canCastle === true && dx === 2){\n            const rook = boardState.find(p => p.x === 7 && p.y === 7)\n            if (rook?.canCastle){\n                if (!checker.isMyKingInCheck(team, boardState, 0) && \n                    !checker.isMyKingInCheck(team, boardState, 1) &&\n                    !checker.isMyKingInCheck(team, boardState, 2)){\n                        if (isLegalRookMove(king.x, king.y, 3, 0, boardState)){\n                            return true\n                        }\n                    return true\n                }\n            }\n        } \n    }\n    return false\n}"]},"metadata":{},"sourceType":"module"}
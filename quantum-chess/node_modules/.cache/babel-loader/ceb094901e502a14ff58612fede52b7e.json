{"ast":null,"code":"import{TeamType}from'../constants';function pawnIsBlockaded(x,y,boardState){var piece=boardState.find(function(p){return p.x===x&&p.y===y;});var occupied=piece?true:false;return occupied;}function checkEnPassant(x,y,boardState){var piece=boardState.find(function(p){return p.x===x&&p.y===y;});if(piece&&piece.enPassantable){return piece.enPassantable;}return false;}export function setEnPassant(px,py,boardState){boardState.forEach(function(p){if(p.x===px&&p.y===py){p.enPassantable=true;}else{p.enPassantable=false;}});}export function unsetEnPassant(boardState){boardState.forEach(function(p){p.enPassantable=false;});}export function isFriendlyPiece(x,y,team,boardState){var piece=boardState.find(function(p){return p.x===x&&p.y===y;});var occupied=piece&&piece.team===team?true:false;return occupied;}export function isPawnStartingMove(px,py,x,y,team,boardState,increment){var startingRow=team===TeamType.WHITE?1:6;if(py===startingRow&&px===x&&py===y-2*increment){if(!pawnIsBlockaded(x,y,boardState)&&!pawnIsBlockaded(x,y-increment,boardState)){return true;}}return false;}export function isPawnNormalMove(px,py,x,y,team,boardState,increment){var enemyTeam=team===TeamType.WHITE?TeamType.BLACK:TeamType.WHITE;if(py===y-increment&&px===x){if(!pawnIsBlockaded(x,y,boardState)){return true;}}if((x===px+1||x===px-1)&&py===y-increment&&isFriendlyPiece(x,y,enemyTeam,boardState)){return true;}return false;}export function isEnPassant(px,py,x,y,team,boardState,increment){var enemyTeam=team===TeamType.WHITE?TeamType.BLACK:TeamType.WHITE;if((x===px+1||x===px-1)&&py===y-increment&&isFriendlyPiece(x,py,enemyTeam,boardState)){if(checkEnPassant(x,py,boardState)){return true;}}return false;}","map":{"version":3,"sources":["/home/jaybird/Coding Projects/Chess4/chess/src/referee/pawnLogic.ts"],"names":["TeamType","pawnIsBlockaded","x","y","boardState","piece","find","p","occupied","checkEnPassant","enPassantable","setEnPassant","px","py","forEach","unsetEnPassant","isFriendlyPiece","team","isPawnStartingMove","increment","startingRow","WHITE","isPawnNormalMove","enemyTeam","BLACK","isEnPassant"],"mappings":"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","sourcesContent":["import { Piece, TeamType } from '../constants'\n\nfunction pawnIsBlockaded(x : number, y: number, boardState : Piece []): boolean {\n    const piece = boardState.find(p => p.x === x && p.y === y) \n    const occupied =  piece ? true : false\n    return occupied\n}\n\nfunction checkEnPassant (x : number, y : number, boardState : Piece []) : boolean {\n    const piece = boardState.find(p => p.x === x && p.y === y)\n    if (piece && piece.enPassantable){\n        return piece.enPassantable  \n    } return false\n}\n\n\n\n\nexport function setEnPassant(px : number, py : number, boardState : Piece []){\n        boardState.forEach(p => {\n            if (p.x === px && p.y === py){\n                p.enPassantable = true\n            } else{\n                p.enPassantable = false\n            }\n        })\n    }\n\nexport function unsetEnPassant( boardState : Piece []){\n    boardState.forEach(p => {\n            p.enPassantable = false\n    })\n}\n\nexport function isFriendlyPiece(x : number, y: number, team : TeamType, boardState : Piece []): boolean {\n    const piece = boardState.find(p => p.x === x && p.y === y)\n    const occupied =  piece && piece.team === team ? true : false\n    return occupied\n}\n\nexport function isPawnStartingMove(px : number, py : number, x : number, y : number, \n                                    team : TeamType, boardState : Piece [], increment : number):boolean{\n    const startingRow = team === TeamType.WHITE ? 1 : 6\n    if ((py === startingRow && px === x) && (py === y - 2 * increment)){\n        if (!pawnIsBlockaded(x, y, boardState) && !pawnIsBlockaded(x, y - increment, boardState)){\n            return true\n        }\n    } return false\n}\n\nexport function isPawnNormalMove(px : number, py : number, x : number, y : number, \n                                team : TeamType, boardState : Piece [], increment : number): boolean{\n    const enemyTeam = team === TeamType.WHITE ? TeamType.BLACK : TeamType.WHITE\n    if (py === y - increment && px === x){\n        if (!pawnIsBlockaded(x, y, boardState)){\n            return true;\n        } \n    }\n    if ((x === px + 1 || x === px -1) && (py === y - increment) && isFriendlyPiece(x, y, enemyTeam, boardState)) {\n        return true\n    } \n    return false \n} \n\n\nexport function isEnPassant(px : number, py : number, x : number, y : number,\n                                 team : TeamType, boardState : Piece [], increment : number): boolean{\n    const enemyTeam = team === TeamType.WHITE ? TeamType.BLACK : TeamType.WHITE\n    if ((x === px + 1 || x === px -1) && (py === y - increment) && isFriendlyPiece(x, py, enemyTeam, boardState)) {\n        if (checkEnPassant(x, py, boardState)){\n            return true\n        }\n    }\n    return false\n}"]},"metadata":{},"sourceType":"module"}
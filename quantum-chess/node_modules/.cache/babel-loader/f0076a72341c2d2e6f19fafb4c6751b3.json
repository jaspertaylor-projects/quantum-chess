{"ast":null,"code":"import { TAKEN_PIECES_BLACK, TAKEN_PIECES_WHITE } from \"../components/TakePiece/TakePiece\";\nimport { PieceType, TeamType } from \"../constants\";\nconst all_pieces = [PieceType.KING, PieceType.QUEEN, PieceType.ROOK, PieceType.BISHOP, PieceType.NIGHT, PieceType.PAWN];\nlet whiteNumPiece = [1, 1, 2, 2, 2, 8];\nlet blackNumPiece = [1, 1, 2, 2, 2, 8];\nlet count = 0;\n\nfunction collapsed(piece, boardState, team, level) {\n  let ids = [];\n\n  for (let i = 0; i < boardState.length; i++) {\n    if (boardState[i].SuperPiece.subPieces.length === level && boardState[i].SuperPiece.subPieces === piece && boardState[i].SuperPiece.team === team) {\n      ids.push(i);\n    }\n  }\n\n  return ids;\n}\n\nfunction uncollapsed(piece, boardState, team) {\n  let ids = [];\n\n  for (let i = 0; i < boardState.length; i++) {\n    if (boardState[i].SuperPiece.subPieces.length > 1 && boardState[i].SuperPiece.subPieces.includes(piece) && boardState[i].SuperPiece.team === team) {\n      ids.push(i);\n    }\n  }\n\n  return ids;\n}\n\nfunction removeOne(piece, boardState, team) {\n  for (let i = 0; i < boardState.length; i++) {\n    if (boardState[i].SuperPiece.subPieces.length > 1 && boardState[i].SuperPiece.subPieces.includes(piece) && boardState[i].SuperPiece.team === team) {\n      const id = boardState[i].SuperPiece.subPieces.indexOf(piece);\n      boardState[i].SuperPiece.subPieces.splice(id, 1);\n      count = count + 1;\n    }\n  }\n}\n\nfunction removeAll(piece, boardState, team) {\n  for (let i = 0; i < boardState.length; i++) {\n    if (boardState[i].SuperPiece.subPieces.length > 1 && boardState[i].SuperPiece.subPieces.includes(piece) && boardState[i].SuperPiece.team === team) {\n      const id = boardState[i].SuperPiece.subPieces.indexOf(piece);\n      boardState[i].SuperPiece.subPieces.splice(0, id);\n      boardState[i].SuperPiece.subPieces = [boardState[i].SuperPiece.subPieces[0]];\n      count = count + 1;\n    }\n  }\n}\n\nfunction first_level_collapse(boardState, team) {\n  if (team === TeamType.WHITE) {\n    for (let i = 0; i < all_pieces.length; i++) {\n      const ids = collapsed([all_pieces[i]], boardState, team, 1);\n\n      if (ids.length + TAKEN_PIECES_WHITE[i] === whiteNumPiece[i]) {\n        removeOne(all_pieces[i], boardState, team);\n      }\n    }\n  } else {\n    for (let i = 0; i < all_pieces.length; i++) {\n      const ids = collapsed([all_pieces[i]], boardState, team, 1);\n\n      if (ids.length + TAKEN_PIECES_BLACK[i] === blackNumPiece[i]) {\n        removeOne(all_pieces[i], boardState, team);\n      }\n    }\n  }\n}\n\nfunction second_level_collapse(boardState, team) {\n  if (team === TeamType.WHITE) {\n    for (let i = 0; i < all_pieces.length; i++) {\n      const ids = collapsed(all_pieces[i], boardState, team, 2);\n\n      if (ids.length + TAKEN_PIECES_WHITE[i] >= whiteNumPiece[i]) {\n        removeOne(all_pieces[i], boardState, team);\n      }\n    }\n  } else {\n    for (let i = 0; i < all_pieces.length; i++) {\n      const ids = collapsed(all_pieces[i], boardState, team, 2);\n\n      if (ids.length + TAKEN_PIECES_BLACK[i] >= blackNumPiece[i]) {\n        removeOne(all_pieces[i], boardState, team);\n      }\n    }\n  }\n}\n\nexport default function fullReduction(boardState) {\n  let somethingChanged = true;\n\n  while (somethingChanged === true) {\n    first_level_collapse(boardState, TeamType.WHITE);\n    first_level_collapse(boardState, TeamType.BLACK);\n    somethingChanged = count !== 0;\n    count = 0;\n  }\n}","map":{"version":3,"sources":["/home/jaybird/Coding Projects/QuantumChess/quantum-chess/src/Referee/stateReducer.ts"],"names":["TAKEN_PIECES_BLACK","TAKEN_PIECES_WHITE","PieceType","TeamType","all_pieces","KING","QUEEN","ROOK","BISHOP","NIGHT","PAWN","whiteNumPiece","blackNumPiece","count","collapsed","piece","boardState","team","level","ids","i","length","SuperPiece","subPieces","push","uncollapsed","includes","removeOne","id","indexOf","splice","removeAll","first_level_collapse","WHITE","second_level_collapse","fullReduction","somethingChanged","BLACK"],"mappings":"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","sourcesContent":["import { TAKEN_PIECES_BLACK, TAKEN_PIECES_WHITE } from \"../components/TakePiece/TakePiece\";\nimport { Piece, PieceType, TeamType } from \"../constants\";\n\n\nconst all_pieces = [PieceType.KING, PieceType.QUEEN, PieceType.ROOK, PieceType.BISHOP, PieceType.NIGHT, PieceType.PAWN]\n\n\nlet whiteNumPiece : number [] = [1, 1, 2, 2, 2, 8]\nlet blackNumPiece : number [] = [1, 1, 2, 2, 2, 8]\nlet count : number = 0\n\n\n\n\n\nfunction collapsed(piece : PieceType [], boardState : Piece [], team : TeamType, level : number) : number [] {\n    let ids : number [] = []\n    for(let i = 0; i < boardState.length; i ++){\n        if (boardState[i].SuperPiece.subPieces.length === level && \n            boardState[i].SuperPiece.subPieces === piece &&\n            boardState[i].SuperPiece.team === team){\n            ids.push(i)\n        }\n    }\n    return ids\n}\n\nfunction uncollapsed(piece : PieceType, boardState : Piece [], team : TeamType) : number [] {\n    let ids : number [] = []\n    for(let i = 0; i < boardState.length; i ++){\n        if (boardState[i].SuperPiece.subPieces.length > 1 && \n            boardState[i].SuperPiece.subPieces.includes(piece) &&\n            boardState[i].SuperPiece.team === team){\n            ids.push(i)\n        }\n    }\n    return ids\n}\n\nfunction removeOne(piece : PieceType, boardState : Piece [], team : TeamType){\n    for(let i = 0; i < boardState.length; i ++){\n        if (boardState[i].SuperPiece.subPieces.length > 1 && \n            boardState[i].SuperPiece.subPieces.includes(piece) && \n            boardState[i].SuperPiece.team === team){\n            const id = boardState[i].SuperPiece.subPieces.indexOf(piece)\n            boardState[i].SuperPiece.subPieces.splice(id, 1)\n            count = count + 1\n        }\n    }\n}\n\nfunction removeAll(piece : PieceType, boardState : Piece [], team : TeamType){\n    for(let i = 0; i < boardState.length; i ++){\n        if (boardState[i].SuperPiece.subPieces.length > 1 && \n            boardState[i].SuperPiece.subPieces.includes(piece) && \n            boardState[i].SuperPiece.team === team){\n            const id = boardState[i].SuperPiece.subPieces.indexOf(piece)\n            boardState[i].SuperPiece.subPieces.splice(0, id)\n            boardState[i].SuperPiece.subPieces = [boardState[i].SuperPiece.subPieces[0]]\n            count = count + 1\n        }\n    }\n}\n\nfunction first_level_collapse(boardState : Piece [], team : TeamType) {\n    if (team === TeamType.WHITE){\n        for (let i =  0; i < all_pieces.length; i++){\n            const ids = collapsed([all_pieces[i]], boardState, team, 1)\n            if (ids.length + TAKEN_PIECES_WHITE[i] === whiteNumPiece[i]){\n                removeOne(all_pieces[i], boardState, team)               \n            }\n        }\n    }\n    else {\n        for (let i =  0; i < all_pieces.length; i++){\n            const ids = collapsed([all_pieces[i]], boardState, team, 1)\n            if (ids.length + TAKEN_PIECES_BLACK[i] === blackNumPiece[i]){\n                removeOne(all_pieces[i], boardState, team)\n            }\n        }\n    }\n}\n\nfunction second_level_collapse(boardState : Piece [], team : TeamType) {\n    if (team === TeamType.WHITE){\n        for (let i =  0; i < all_pieces.length; i++){\n            const ids = collapsed(all_pieces[i], boardState, team, 2)\n            if (ids.length + TAKEN_PIECES_WHITE[i] >= whiteNumPiece[i]){\n                removeOne(all_pieces[i], boardState, team)               \n            }\n        }\n    }\n    else {\n        for (let i =  0; i < all_pieces.length; i++){\n            const ids = collapsed(all_pieces[i], boardState, team, 2)\n            if (ids.length + TAKEN_PIECES_BLACK[i] >= blackNumPiece[i]){\n                removeOne(all_pieces[i], boardState, team)\n            }\n        }\n    }\n}\n\nexport default function fullReduction(boardState : Piece []){\n    let somethingChanged = true\n    while (somethingChanged === true){\n        first_level_collapse(boardState, TeamType.WHITE)\n        first_level_collapse(boardState, TeamType.BLACK)\n        somethingChanged = count !== 0\n        count = 0\n    }\n}"]},"metadata":{},"sourceType":"module"}
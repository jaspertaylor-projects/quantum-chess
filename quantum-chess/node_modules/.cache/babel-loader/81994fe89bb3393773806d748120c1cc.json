{"ast":null,"code":"import _classCallCheck from\"/home/jaybird/Coding Projects/Chess4/chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jaybird/Coding Projects/Chess4/chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{PieceType,TeamType}from\"../constants\";import{isPawnNormalMove,isEnPassant,isPawnStartingMove,isFriendlyPiece,unsetEnPassant,setEnPassant}from\"./pawnLogic\";import{isLegalBishopMove,isLegalRookMove,isLegalQueenMove,isLegalKingMove,isLegalNightMove,isCastleMove}from\"./pieceLogic\";var Referee=/*#__PURE__*/function(){function Referee(){_classCallCheck(this,Referee);}_createClass(Referee,[{key:\"noCastle\",value:function noCastle(px,py,boardState){var piece=boardState.find(function(p){return p.x===px&&p.y===py;});if(piece){piece.canCastle=false;}}},{key:\"takePiece\",value:function takePiece(x,y,team,boardState){var piece=boardState.find(function(p){return p.x===x&&p.y===y&&p.team!==team;});if(piece){piece.taken=true;}}},{key:\"endMove\",value:function endMove(px,py,x,y,team,boardState,valid){if(!isFriendlyPiece(x,y,team,boardState)){this.noCastle(px,py,boardState);this.takePiece(x,y,team,boardState);unsetEnPassant(boardState);valid.value=true;}}},{key:\"isValidMove\",value:function isValidMove(px,py,x,y,type,team,boardState,activePlayer){// Only the active player can move\nif(team!==activePlayer){return false;}// A non-move is not a move\nif(px===x&&py===y){return false;}// A move off the board is not a move\nif(x<0||y<0||x>7||y>7){return false;}var valid={value:false};var dx=x-px;var dy=y-py;switch(type){case PieceType.PAWN:{if(isPawnStartingMove(px,py,x,y,team,boardState)){setEnPassant(px,py,boardState);return true;}if(isPawnNormalMove(px,py,x,y,team,boardState)){this.endMove(px,py,x,y,team,boardState,valid);}if(isEnPassant(px,py,x,y,team,boardState)){this.endMove(-1,-1,x,py,team,boardState,valid);}break;}case PieceType.NIGHT:{if(isLegalNightMove(px,py,dx,dy,boardState)){this.endMove(px,py,x,y,team,boardState,valid);}break;}case PieceType.BISHOP:{if(isLegalBishopMove(px,py,dx,dy,boardState)){this.endMove(px,py,x,y,team,boardState,valid);}break;}case PieceType.ROOK:{if(isLegalRookMove(px,py,dx,dy,boardState)){this.endMove(px,py,x,y,team,boardState,valid);}break;}case PieceType.QUEEN:{if(isLegalQueenMove(px,py,dx,dy,boardState)){this.endMove(px,py,x,y,team,boardState,valid);}break;}case PieceType.KING:{if(isLegalKingMove(px,py,dx,dy,boardState)){this.endMove(px,py,x,y,team,boardState,valid);}if(isCastleMove(px,py,dx,dy,activePlayer,boardState)){if(activePlayer===TeamType.WHITE){if(dx===-2){var piece=boardState.find(function(p){return p.x===0&&p.y===0;});if(piece){piece.teleported=true;}}if(dx===2){var _piece=boardState.find(function(p){return p.x===7&&p.y===0;});if(_piece){_piece.teleported=true;}}}if(activePlayer===TeamType.BLACK){if(dx===-2){var _piece2=boardState.find(function(p){return p.x===0&&p.y===7;});if(_piece2){_piece2.teleported=true;}}if(dx===2){var _piece3=boardState.find(function(p){return p.x===7&&p.y===7;});if(_piece3){_piece3.teleported=true;}}}this.endMove(px,py,x,y,team,boardState,valid);}break;}}return valid.value;}}]);return Referee;}();export{Referee as default};","map":{"version":3,"sources":["/home/jaybird/Coding Projects/Chess4/chess/src/referee/Referee.ts"],"names":["PieceType","TeamType","isPawnNormalMove","isEnPassant","isPawnStartingMove","isFriendlyPiece","unsetEnPassant","setEnPassant","isLegalBishopMove","isLegalRookMove","isLegalQueenMove","isLegalKingMove","isLegalNightMove","isCastleMove","Referee","px","py","boardState","piece","find","p","x","y","canCastle","team","taken","valid","noCastle","takePiece","value","type","activePlayer","dx","dy","PAWN","endMove","NIGHT","BISHOP","ROOK","QUEEN","KING","WHITE","teleported","BLACK"],"mappings":"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","sourcesContent":["\nimport { PieceType, TeamType, Piece, } from \"../constants\"\nimport { isPawnNormalMove, isEnPassant, isPawnStartingMove, isFriendlyPiece, unsetEnPassant, setEnPassant } from \"./pawnLogic\"\nimport { isLegalBishopMove, isLegalRookMove, isLegalQueenMove, isLegalKingMove, isLegalNightMove, isCastleMove} from \"./pieceLogic\"\n\nexport default class Referee{\n    noCastle(px: number, py: number, boardState : Piece []){\n        const piece = boardState.find(p => p.x === px && p.y === py)\n        if (piece){\n            piece.canCastle = false\n        }\n    }\n    takePiece(x : number, y: number, team : TeamType, boardState : Piece []){\n        const piece = boardState.find(p => p.x === x && p.y === y && p.team !== team)  \n                if (piece) {\n            piece.taken = true\n        }\n    }\n    endMove(px : number, py : number, x : number, y: number, team : TeamType, boardState : Piece [], \n            valid : any){\n        if (!isFriendlyPiece(x, y, team, boardState)){\n            this.noCastle(px, py, boardState)\n            this.takePiece(x, y, team, boardState)\n            unsetEnPassant(boardState)\n            valid.value = true          \n        }\n    }\n    isValidMove(px : number, py : number, x : number, y : number, type : PieceType, \n                team : TeamType, boardState : Piece [], activePlayer : TeamType) : boolean{\n        // Only the active player can move\n        if (team !== activePlayer){\n            return false\n        }\n        // A non-move is not a move\n        if (px === x && py === y){\n            return false\n        }\n        // A move off the board is not a move\n        if (x < 0 || y < 0 || x > 7 || y > 7){\n            return false\n        }\n        var valid = { value: false }\n        const dx = x - px\n        const dy = y - py\n\n        switch(type){\n            case PieceType.PAWN : {\n                if (isPawnStartingMove(px, py, x, y, team, boardState)){\n                    setEnPassant(px, py, boardState)\n                    return true\n                }\n                if (isPawnNormalMove(px, py, x, y, team, boardState)){\n                    this.endMove(px, py, x, y, team, boardState, valid)\n                }\n                if (isEnPassant(px, py, x, y, team, boardState)){\n                    this.endMove(-1, -1, x, py, team, boardState, valid)\n                }\n                break;\n            }\n            case PieceType.NIGHT : {\n                if (isLegalNightMove(px, py, dx, dy, boardState)){\n                    this.endMove(px, py, x, y, team, boardState, valid)\n                }\n                break;\n            }\n            case PieceType.BISHOP : {\n                if (isLegalBishopMove(px, py, dx, dy, boardState)){\n                    this.endMove(px, py, x, y, team, boardState, valid)\n                }\n                break;\n            }\n            case PieceType.ROOK : {\n                if (isLegalRookMove(px, py, dx, dy, boardState)){\n                    this.endMove(px, py, x, y, team, boardState, valid)\n                }\n                break;\n            }\n            case PieceType.QUEEN : {\n                if (isLegalQueenMove(px, py, dx, dy, boardState)){\n                    this.endMove(px, py, x, y, team, boardState, valid)\n                }\n                break;\n            }\n            case PieceType.KING : {\n                if (isLegalKingMove(px, py, dx, dy, boardState)){\n                    this.endMove(px, py, x, y, team, boardState, valid)\n                }\n                if (isCastleMove(px, py, dx, dy, activePlayer, boardState)){\n                    if (activePlayer === TeamType.WHITE){\n                        if (dx === -2){ \n                            const piece = boardState.find(p => p.x === 0 && p.y === 0)\n                            if (piece){\n                                piece.teleported = true\n                            }\n                        }\n                        if (dx === 2){ \n                            const piece = boardState.find(p => p.x === 7 && p.y === 0)\n                            if (piece){\n                                piece.teleported = true\n                            }\n                        }\n                    }\n                    if (activePlayer === TeamType.BLACK){\n                        if (dx === -2){ \n                            const piece = boardState.find(p => p.x === 0 && p.y === 7)\n                            if (piece){\n                                piece.teleported = true\n                            }\n                        }\n                        if (dx === 2){ \n                            const piece = boardState.find(p => p.x === 7 && p.y === 7)\n                            if (piece){\n                                piece.teleported = true\n                            }\n                        }\n                    }\n                this.endMove(px, py, x, y, team, boardState, valid)\n                }\n            break;\n            }\n        }\n    return valid.value\n    }\n}"]},"metadata":{},"sourceType":"module"}